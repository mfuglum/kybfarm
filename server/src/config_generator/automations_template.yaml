# Automations
- alias: {{SENSOR_01_REQ_AUTOMATION_ALIAS}}
  description: ''
  trigger:
  - platform: time_pattern
    seconds: /{{SENSOR_01_REQ_INTERVAL_SEC}}
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: false
      topic: {{MQTT_SENSOR_01_REQ}}
      payload: '{"req_topic": {{MQTT_SENSOR_01_REQ}}, "res_topic": {{MQTT_SENSOR_01_RES}},
        "data": "ha_req" }'
  mode: single

- alias: {{SENSOR_02_REQ_AUTOMATION_ALIAS}}
  description: ''
  trigger:
  - platform: time_pattern
    seconds: /{{SENSOR_02_REQ_INTERVAL_SEC}}
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: false
      topic: {{MQTT_SENSOR_02_REQ}}
      payload: '{"req_topic": {{MQTT_SENSOR_02_REQ}}, "res_topic": {{MQTT_SENSOR_02_RES}},
        "data": "ha_req" }'
  mode: single

- alias: {{SENSOR_11_REQ_AUTOMATION_ALIAS}} 
  description: ''
  trigger:
  - platform: time_pattern
    seconds: /{{SENSOR_11_REQ_INTERVAL_SEC}}
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: false
      topic: {{MQTT_SENSOR_11_REQ}}
      payload: '{"req_topic": {{MQTT_SENSOR_11_REQ}}, "res_topic": {{MQTT_SENSOR_11_RES}},
        "data": "ha_req" }'
  mode: single

- alias: {{SENSOR_10_REQ_AUTOMATION_ALIAS}}
  description: ''
  trigger:
  - platform: time_pattern
    seconds: /{{SENSOR_10_REQ_INTERVAL_SEC}}
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: false
      topic: {{MQTT_SENSOR_10_REQ}}
      payload: '{"req_topic": {{MQTT_SENSOR_10_REQ}}, "res_topic": {{MQTT_SENSOR_10_RES}},
        "data": "ha_req" }'
  mode: single

- alias: {{RELAY_12_CMD_ON_AUTOMATION_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.relay_12
    from: 'off'
    to: 'on'
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: false
      topic: {{MQTT_RELAY_12_CMD}}
      payload: '{ "cmd": "on"}'
  mode: single

- alias: {{RELAY_12_CMD_OFF_AUTOMATION_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.relay_12
    from: 'on'
    to: 'off'
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: false
      topic: {{MQTT_RELAY_12_CMD}}
      payload: '{"cmd": "off"}'
  mode: single

- alias: {{SENSOR_03_INIT_CALIBRATION_1413_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.calibrate_ec_sensor_1
    from:
    to: Initiate calibration for EC 1413us/cm
  condition: []
  action:
  - service: input_text.set_value
    metadata: {}
    data:
      value: Immerse probe in 1413us/cm, register calibration afte a while.
    target:
      entity_id: input_text.calibration_status
  mode: single

- alias: {{SENSOR_03_REG_CALIBRATION_1413_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.calibrate_ec_sensor_1
    from:
    to: Register calibration for EC 1413us/cm
  condition: []
  action:
  - service: input_text.set_value
    metadata: {}
    data:
      value: Registered calibration for EC sensor 1 for 1413us/cm reference.
    target:
      entity_id: input_text.calibration_status
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: false
      topic: {{MQTT_SENSOR_03_CMD}}
      payload: '{ "cmd": "register_ec_1413"}'
  mode: single

- alias: {{SENSOR_03_END_CALIBRATION_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.calibrate_ec_sensor_1
    from:
    to: Normal Operation
  condition: []
  action:
  - service: input_text.set_value
    metadata: {}
    data:
      value: Sensor has returned to normal operation.
    target:
      entity_id: input_text.calibration_status
  mode: single

- alias: {{SENSOR_03_INIT_CALIBRATION_12880_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.calibrate_ec_sensor_1
    from:
    to: Initiate calibration for EC 12880us/cm
  condition: []
  action:
  - service: input_text.set_value
    metadata: {}
    data:
      value: Immerse probe in 12880us/cm, register calibration afte a while.
    target:
      entity_id: input_text.calibration_status
  mode: single

- alias: {{SENSOR_03_REG_CALIBRATION_12880_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.calibrate_ec_sensor_1
    from:
    to: Register calibration for EC 12880us/cm
  condition: []
  action:
  - service: input_text.set_value
    metadata: {}
    data:
      value: Registered calibration for EC sensor 1 for 12880us/cm reference.
    target:
      entity_id: input_text.calibration_status
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: false
      topic: {{MQTT_SENSOR_03_CMD}}
      payload: '{ "cmd": "register_ec_12880"}'
  mode: single
