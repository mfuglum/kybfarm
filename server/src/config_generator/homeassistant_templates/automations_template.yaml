# Automations
# Sensors #
- alias: {{SENSOR_01_DT_REQ_AUTOMATION_ALIAS}}
  description: ''
  trigger:
  - platform: time_pattern
    seconds: 1
  - platform: time_pattern
    seconds: 31
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: false
      topic: {{MQTT_SENSOR_01_DT_REQ}}
      payload: '{"req_topic": {{MQTT_SENSOR_01_DT_REQ}}, "res_topic": {{MQTT_SENSOR_01_DT_RES}},
        "data": "ha_req" }'
  mode: single

- alias: {{SENSOR_02_DT_REQ_AUTOMATION_ALIAS}}
  description: ''
  trigger:
  - platform: time_pattern
    seconds: 2
  - platform: time_pattern
    seconds: 32
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: false
      topic: {{MQTT_SENSOR_02_DT_REQ}}
      payload: '{"req_topic": {{MQTT_SENSOR_02_DT_REQ}}, "res_topic": {{MQTT_SENSOR_02_DT_RES}},
        "data": "ha_req" }'
  mode: single

- alias: {{SENSOR_03_DT_REQ_AUTOMATION_ALIAS}}
  description: ''
  trigger:
  - platform: time_pattern
    seconds: 3
  - platform: time_pattern
    seconds: 33
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: false
      topic: {{MQTT_SENSOR_03_DT_REQ}}
      payload: '{"req_topic": {{MQTT_SENSOR_03_DT_REQ}}, "res_topic": {{MQTT_SENSOR_03_DT_RES}},
        "data": "ha_req" }'
  mode: single

- alias: {{SENSOR_03_INIT_CALIBRATION_1413_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.calibrate_s_ec_01_1
    from:
    to: Initiate calibration for EC 1413us/cm
  condition: []
  action:
  - service: input_text.set_value
    metadata: {}
    data:
      value: Immerse probe in 1413us/cm, register calibration afte a while.
    target:
      entity_id: input_text.calibration_status
  mode: single

- alias: {{SENSOR_03_REG_CALIBRATION_1413_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.calibrate_s_ec_01_1
    from:
    to: Register calibration for EC 1413us/cm
  condition: []
  action:
  - service: input_text.set_value
    metadata: {}
    data:
      value: Registered calibration for EC sensor 1 for 1413us/cm reference.
    target:
      entity_id: input_text.calibration_status
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: false
      topic: {{MQTT_SENSOR_03_CMD_REQ}}
      payload: '{ "cmd": "calibrate_ec_1413", "res_topic": {{MQTT_SENSOR_03_DT_RES}}}'
  mode: single

- alias: {{SENSOR_03_END_CALIBRATION_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.calibrate_s_ec_01_1
    from:
    to: Normal Operation
  condition: []
  action:
  - service: input_text.set_value
    metadata: {}
    data:
      value: Sensor has returned to normal operation.
    target:
      entity_id: input_text.calibration_status
  mode: single

- alias: {{SENSOR_03_INIT_CALIBRATION_12880_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.calibrate_s_ec_01_1
    from:
    to: Initiate calibration for EC 12880us/cm
  condition: []
  action:
  - service: input_text.set_value
    metadata: {}
    data:
      value: Immerse probe in 12880us/cm, register calibration afte a while.
    target:
      entity_id: input_text.calibration_status
  mode: single

- alias: {{SENSOR_03_REG_CALIBRATION_12880_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.calibrate_s_ec_01_1
    from:
    to: Register calibration for EC 12880us/cm
  condition: []
  action:
  - service: input_text.set_value
    metadata: {}
    data:
      value: Registered calibration for EC sensor 1 for 12880us/cm reference.
    target:
      entity_id: input_text.calibration_status
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: false
      topic: {{MQTT_SENSOR_03_CMD_REQ}}
      payload: '{ "cmd": "calibrate_ec_12880", "res_topic": {{MQTT_SENSOR_03_DT_RES}}}'
  mode: single

- alias: {{SENSOR_04_DT_REQ_AUTOMATION_ALIAS}}
  description: ''
  trigger:
  - platform: time_pattern
    seconds: 4
  - platform: time_pattern
    seconds: 34
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: false
      topic: {{MQTT_SENSOR_04_DT_REQ}}
      payload: '{"req_topic": {{MQTT_SENSOR_04_DT_REQ}}, "res_topic": {{MQTT_SENSOR_04_DT_RES}},
        "data": "ha_req" }'
  mode: single

- alias: {{SENSOR_04_INIT_CALIBRATION_1413_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.calibrate_s_ec_01_2
    from:
    to: Initiate calibration for EC 1413us/cm
  condition: []
  action:
  - service: input_text.set_value
    metadata: {}
    data:
      value: Immerse probe in 1413us/cm, register calibration afte a while.
    target:
      entity_id: input_text.calibration_status
  mode: single

- alias: {{SENSOR_04_REG_CALIBRATION_1413_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.calibrate_s_ec_01_2
    from:
    to: Register calibration for EC 1413us/cm
  condition: []
  action:
  - service: input_text.set_value
    metadata: {}
    data:
      value: Registered calibration for EC sensor 2 for 1413us/cm reference.
    target:
      entity_id: input_text.calibration_status
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: false
      topic: {{MQTT_SENSOR_04_CMD_REQ}}
      payload: '{ "cmd": "calibrate_ec_1413", "res_topic": {{MQTT_SENSOR_04_DT_RES}}}'
  mode: single

- alias: {{SENSOR_04_END_CALIBRATION_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.calibrate_s_ec_01_2
    from:
    to: Normal Operation
  condition: []
  action:
  - service: input_text.set_value
    metadata: {}
    data:
      value: Sensor has returned to normal operation.
    target:
      entity_id: input_text.calibration_status
  mode: single

- alias: {{SENSOR_04_INIT_CALIBRATION_12880_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.calibrate_s_ec_01_2
    from:
    to: Initiate calibration for EC 12880us/cm
  condition: []
  action:
  - service: input_text.set_value
    metadata: {}
    data:
      value: Immerse probe in 12880us/cm, register calibration afte a while.
    target:
      entity_id: input_text.calibration_status
  mode: single

- alias: {{SENSOR_04_REG_CALIBRATION_12880_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.calibrate_s_ec_01_2
    from:
    to: Register calibration for EC 12880us/cm
  condition: []
  action:
  - service: input_text.set_value
    metadata: {}
    data:
      value: Registered calibration for EC sensor 2 for 12880us/cm reference.
    target:
      entity_id: input_text.calibration_status
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: false
      topic: {{MQTT_SENSOR_04_CMD_REQ}}
      payload: '{ "cmd": "calibrate_ec_12880", "res_topic": {{MQTT_SENSOR_04_DT_RES}}}'
  mode: single

- alias: {{SENSOR_05_DT_REQ_AUTOMATION_ALIAS}}
  description: ''
  trigger:
  - platform: time_pattern
    seconds: 6
  - platform: time_pattern
    seconds: 36
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: false
      topic: {{MQTT_SENSOR_05_DT_REQ}}
      payload: '{"req_topic": {{MQTT_SENSOR_05_DT_REQ}}, "res_topic": {{MQTT_SENSOR_05_DT_RES}},
        "data": "ha_req" }'
  mode: single

- alias: {{SENSOR_05_INIT_CALIBRATION_0401_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.calibrate_s_ph_01_1
    from:
    to: Initiate calibration for pH 4.01
  condition: []
  action:
  - service: input_text.set_value
    metadata: {}
    data:
      value: Immerse probe in pH 4.01, register calibration afte a while.
    target:
      entity_id: input_text.calibration_status
  mode: single

- alias: {{SENSOR_05_REG_CALIBRATION_0401_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.calibrate_s_ph_01_1
    from:
    to: Register calibration for pH 4.01
  condition: []
  action:
  - service: input_text.set_value
    metadata: {}
    data:
      value: Registered calibration for pH sensor 1 for pH 4.01 reference.
    target:
      entity_id: input_text.calibration_status
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: false
      topic: {{MQTT_SENSOR_05_CMD_REQ}}
      payload: '{ "cmd": "calibrate_ph_0401", "res_topic": {{MQTT_SENSOR_05_DT_RES}}}'
  mode: single

- alias: {{SENSOR_05_END_CALIBRATION_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.calibrate_s_ph_01_1
    from:
    to: Normal Operation
  condition: []
  action:
  - service: input_text.set_value
    metadata: {}
    data:
      value: Sensor has returned to normal operation.
    target:
      entity_id: input_text.calibration_status
  mode: single

- alias: {{SENSOR_05_INIT_CALIBRATION_0700_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.calibrate_s_ph_01_1
    from:
    to: Initiate calibration for pH 7.00
  condition: []
  action:
  - service: input_text.set_value
    metadata: {}
    data:
      value: Immerse probe in pH 7.00, register calibration afte a while.
    target:
      entity_id: input_text.calibration_status
  mode: single

- alias: {{SENSOR_05_REG_CALIBRATION_0700_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.calibrate_s_ph_01_1
    from:
    to: Register calibration for pH 7.00
  condition: []
  action:
  - service: input_text.set_value
    metadata: {}
    data:
      value: Registered calibration for pH sensor 1 for pH 7.00 reference.
    target:
      entity_id: input_text.calibration_status
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: false
      topic: {{MQTT_SENSOR_05_CMD_REQ}}
      payload: '{ "cmd": "calibrate_ph_0700", "res_topic": {{MQTT_SENSOR_05_DT_RES}}}'
  mode: single

- alias: {{SENSOR_05_INIT_CALIBRATION_1001_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.calibrate_s_ph_01_1
    from:
    to: Initiate calibration for pH 10.01
  condition: []
  action:
  - service: input_text.set_value
    metadata: {}
    data:
      value: Immerse probe in pH 10.01, register calibration afte a while.
    target:
      entity_id: input_text.calibration_status
  mode: single

- alias: {{SENSOR_05_REG_CALIBRATION_1001_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.calibrate_s_ph_01_1
    from:
    to: Register calibration for pH 10.01
  condition: []
  action:
  - service: input_text.set_value
    metadata: {}
    data:
      value: Registered calibration for pH sensor 1 for pH 10.01 reference.
    target:
      entity_id: input_text.calibration_status
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: false
      topic: {{MQTT_SENSOR_05_CMD_REQ}}
      payload: '{ "cmd": "calibrate_ph_1001", "res_topic": {{MQTT_SENSOR_05_DT_RES}}}'
  mode: single

- alias: {{SENSOR_06_DT_REQ_AUTOMATION_ALIAS}}
  description: ''
  trigger:
  - platform: time_pattern
    seconds: 7
  - platform: time_pattern
    seconds: 37
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: false
      topic: {{MQTT_SENSOR_06_DT_REQ}}
      payload: '{"req_topic": {{MQTT_SENSOR_06_DT_REQ}}, "res_topic": {{MQTT_SENSOR_06_DT_RES}},
        "data": "ha_req" }'
  mode: single

- alias: {{SENSOR_06_INIT_CALIBRATION_0401_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.calibrate_s_ph_01_2
    from:
    to: Initiate calibration for pH 4.01
  condition: []
  action:
  - service: input_text.set_value
    metadata: {}
    data:
      value: Immerse probe in pH 4.01, register calibration afte a while.
    target:
      entity_id: input_text.calibration_status
  mode: single

- alias: {{SENSOR_06_REG_CALIBRATION_0401_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.calibrate_s_ph_01_2
    from:
    to: Register calibration for pH 4.01
  condition: []
  action:
  - service: input_text.set_value
    metadata: {}
    data:
      value: Registered calibration for pH sensor 2 for pH 4.01 reference.
    target:
      entity_id: input_text.calibration_status
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: false
      topic: {{MQTT_SENSOR_06_CMD_REQ}}
      payload: '{ "cmd": "calibrate_ph_0401", "res_topic": {{MQTT_SENSOR_06_DT_RES}}}'
  mode: single

- alias: {{SENSOR_06_END_CALIBRATION_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.calibrate_s_ph_01_2
    from:
    to: Normal Operation
  condition: []
  action:
  - service: input_text.set_value
    metadata: {}
    data:
      value: Sensor has returned to normal operation.
    target:
      entity_id: input_text.calibration_status
  mode: single

- alias: {{SENSOR_06_INIT_CALIBRATION_0700_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.calibrate_s_ph_01_2
    from:
    to: Initiate calibration for pH 7.00
  condition: []
  action:
  - service: input_text.set_value
    metadata: {}
    data:
      value: Immerse probe in pH 7.00, register calibration afte a while.
    target:
      entity_id: input_text.calibration_status
  mode: single

- alias: {{SENSOR_06_REG_CALIBRATION_0700_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.calibrate_s_ph_01_2
    from:
    to: Register calibration for pH 7.00
  condition: []
  action:
  - service: input_text.set_value
    metadata: {}
    data:
      value: Registered calibration for pH sensor 2 for pH 7.00 reference.
    target:
      entity_id: input_text.calibration_status
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: false
      topic: {{MQTT_SENSOR_06_CMD_REQ}}
      payload: '{ "cmd": "calibrate_ph_0700", "res_topic": {{MQTT_SENSOR_06_DT_RES}}}'
  mode: single

- alias: {{SENSOR_06_INIT_CALIBRATION_1001_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.calibrate_s_ph_01_2
    from:
    to: Initiate calibration for pH 10.01
  condition: []
  action:
  - service: input_text.set_value
    metadata: {}
    data:
      value: Immerse probe in pH 10.01, register calibration afte a while.
    target:
      entity_id: input_text.calibration_status
  mode: single

- alias: {{SENSOR_06_REG_CALIBRATION_1001_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.calibrate_s_ph_01_2
    from:
    to: Register calibration for pH 10.01
  condition: []
  action:
  - service: input_text.set_value
    metadata: {}
    data:
      value: Registered calibration for pH sensor 2 for pH 10.01 reference.
    target:
      entity_id: input_text.calibration_status
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: false
      topic: {{MQTT_SENSOR_06_CMD_REQ}}
      payload: '{ "cmd": "calibrate_ph_1001", "res_topic": {{MQTT_SENSOR_06_DT_RES}}}'
  mode: single

- alias: {{SENSOR_11_DT_REQ_AUTOMATION_ALIAS}} 
  description: ''
  trigger:
  - platform: time_pattern
    seconds: /10
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: false
      topic: {{MQTT_SENSOR_11_DT_REQ}}
      payload: '{"req_topic": {{MQTT_SENSOR_11_DT_REQ}}, "res_topic": {{MQTT_SENSOR_11_DT_RES}},
        "data": "ha_req" }'
  mode: single

#- alias: {{SENSOR_12_DT_REQ_AUTOMATION_ALIAS}} 
#  description: ''
#  trigger:
#  - platform: time_pattern
#    seconds: /{{SENSOR_12_DT_REQ_INTERVAL_SEC}}
#  condition: []
#  action:
#  - service: mqtt.publish
#    metadata: {}
#    data:
#     qos: 0
#      retain: false
#      topic: {{MQTT_SENSOR_12_DT_REQ}}
#      payload: '{"req_topic": {{MQTT_SENSOR_12_DT_REQ}}, "res_topic": {{MQTT_SENSOR_12_DT_RES}},
#        "data": "ha_req" }'
#  mode: single

- alias: {{SENSOR_13_DT_REQ_AUTOMATION_ALIAS}} 
  description: ''
  trigger:
  - platform: time_pattern
    seconds: 5
  - platform: time_pattern
    seconds: 11
  - platform: time_pattern
    seconds: 15
  - platform: time_pattern
    seconds: 21
  - platform: time_pattern
    seconds: 25
  - platform: time_pattern
    seconds: 29
  - platform: time_pattern
    seconds: 35
  - platform: time_pattern
    seconds: 41
  - platform: time_pattern
    seconds: 45
  - platform: time_pattern
    seconds: 51
  - platform: time_pattern
    seconds: 55
  - platform: time_pattern
    seconds: 59
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: false
      topic: {{MQTT_SENSOR_13_DT_REQ}}
      payload: '{"req_topic": {{MQTT_SENSOR_13_DT_REQ}}, "res_topic": {{MQTT_SENSOR_13_DT_RES}},
        "data": "ha_req" }'
  mode: single

- alias: {{SENSOR_14_DT_REQ_AUTOMATION_ALIAS}} 
  description: ''
  trigger:
  - platform: time_pattern
    seconds: 8
  - platform: time_pattern
    seconds: 38
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: false
      topic: {{MQTT_SENSOR_14_DT_REQ}}
      payload: '{"req_topic": {{MQTT_SENSOR_14_DT_REQ}}, "res_topic": {{MQTT_SENSOR_14_DT_RES}},
        "data": "ha_req" }'
  mode: single

- alias: {{SENSOR_10_DT_REQ_AUTOMATION_ALIAS}}
  description: ''
  trigger:
  - platform: time_pattern
    seconds: 9
  - platform: time_pattern
    seconds: 39
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: false
      topic: {{MQTT_SENSOR_10_DT_REQ}}
      payload: '{"req_topic": {{MQTT_SENSOR_10_DT_REQ}}, "res_topic": {{MQTT_SENSOR_10_DT_RES}},
        "data": "ha_req" }'
  mode: single

# Relays #
# Relay automations for toggle-on-off switch (input_boolean) on relay 01-16
- alias: {{RELAY_01_CMD_REQ_ON_AUTOMATION_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.relay_1
    from: 'off'
    to: 'on'
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: true
      topic: {{MQTT_RELAY_01_CMD_REQ}}
      payload: '{ "cmd": "on"}'
  mode: single

- alias: {{RELAY_01_CMD_REQ_OFF_AUTOMATION_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.relay_1
    from: 'on'
    to: 'off'
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: true
      topic: {{MQTT_RELAY_01_CMD_REQ}}
      payload: '{"cmd": "off"}'
  mode: single

- alias: {{RELAY_02_CMD_REQ_ON_AUTOMATION_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.relay_2
    from: 'off'
    to: 'on'
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: true
      topic: {{MQTT_RELAY_02_CMD_REQ}}
      payload: '{ "cmd": "on"}'
  mode: single

- alias: {{RELAY_02_CMD_REQ_OFF_AUTOMATION_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.relay_2
    from: 'on'
    to: 'off'
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: true
      topic: {{MQTT_RELAY_02_CMD_REQ}}
      payload: '{"cmd": "off"}'
  mode: single

- alias: {{RELAY_03_CMD_REQ_ON_AUTOMATION_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.relay_3
    from: 'off'
    to: 'on'
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: true
      topic: {{MQTT_RELAY_03_CMD_REQ}}
      payload: '{ "cmd": "on"}'
  mode: single

- alias: {{RELAY_03_CMD_REQ_OFF_AUTOMATION_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.relay_3
    from: 'on'
    to: 'off'
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: true
      topic: {{MQTT_RELAY_03_CMD_REQ}}
      payload: '{"cmd": "off"}'
  mode: single

- alias: {{RELAY_04_CMD_REQ_ON_AUTOMATION_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.relay_4
    from: 'off'
    to: 'on'
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: true
      topic: {{MQTT_RELAY_04_CMD_REQ}}
      payload: '{ "cmd": "on"}'
  mode: single

- alias: {{RELAY_04_CMD_REQ_OFF_AUTOMATION_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.relay_4
    from: 'on'
    to: 'off'
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: true
      topic: {{MQTT_RELAY_04_CMD_REQ}}
      payload: '{"cmd": "off"}'
  mode: single

- alias: {{RELAY_05_CMD_REQ_ON_AUTOMATION_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.relay_5
    from: 'off'
    to: 'on'
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: true
      topic: {{MQTT_RELAY_05_CMD_REQ}}
      payload: '{ "cmd": "on"}'
  mode: single

- alias: {{RELAY_05_CMD_REQ_OFF_AUTOMATION_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.relay_5
    from: 'on'
    to: 'off'
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: true
      topic: {{MQTT_RELAY_05_CMD_REQ}}
      payload: '{"cmd": "off"}'
  mode: single

- alias: {{RELAY_06_CMD_REQ_ON_AUTOMATION_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.relay_6
    from: 'off'
    to: 'on'
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: true
      topic: {{MQTT_RELAY_06_CMD_REQ}}
      payload: '{ "cmd": "on"}'
  mode: single

- alias: {{RELAY_06_CMD_REQ_OFF_AUTOMATION_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.relay_6
    from: 'on'
    to: 'off'
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: true
      topic: {{MQTT_RELAY_06_CMD_REQ}}
      payload: '{"cmd": "off"}'
  mode: single

- alias: {{RELAY_07_CMD_REQ_ON_AUTOMATION_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.relay_7
    from: 'off'
    to: 'on'
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: true
      topic: {{MQTT_RELAY_07_CMD_REQ}}
      payload: '{ "cmd": "on"}'
  mode: single

- alias: {{RELAY_07_CMD_REQ_OFF_AUTOMATION_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.relay_7
    from: 'on'
    to: 'off'
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: true
      topic: {{MQTT_RELAY_07_CMD_REQ}}
      payload: '{"cmd": "off"}'
  mode: single

- alias: {{RELAY_08_CMD_REQ_ON_AUTOMATION_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.relay_8
    from: 'off'
    to: 'on'
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: true
      topic: {{MQTT_RELAY_08_CMD_REQ}}
      payload: '{ "cmd": "on"}'
  mode: single

- alias: {{RELAY_08_CMD_REQ_OFF_AUTOMATION_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.relay_8
    from: 'on'
    to: 'off'
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: true
      topic: {{MQTT_RELAY_08_CMD_REQ}}
      payload: '{"cmd": "off"}'
  mode: single

- alias: {{RELAY_09_CMD_REQ_ON_AUTOMATION_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.relay_9
    from: 'off'
    to: 'on'
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: true
      topic: {{MQTT_RELAY_09_CMD_REQ}}
      payload: '{ "cmd": "on"}'
  mode: single

- alias: {{RELAY_09_CMD_REQ_OFF_AUTOMATION_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.relay_9
    from: 'on'
    to: 'off'
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: true
      topic: {{MQTT_RELAY_09_CMD_REQ}}
      payload: '{"cmd": "off"}'
  mode: single

- alias: {{RELAY_10_CMD_REQ_ON_AUTOMATION_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.relay_10
    from: 'off'
    to: 'on'
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: true
      topic: {{MQTT_RELAY_10_CMD_REQ}}
      payload: '{ "cmd": "on"}'
  mode: single

- alias: {{RELAY_10_CMD_REQ_OFF_AUTOMATION_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.relay_10
    from: 'on'
    to: 'off'
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: true
      topic: {{MQTT_RELAY_10_CMD_REQ}}
      payload: '{"cmd": "off"}'
  mode: single

- alias: {{RELAY_11_CMD_REQ_ON_AUTOMATION_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.relay_11
    from: 'off'
    to: 'on'
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: true
      topic: {{MQTT_RELAY_11_CMD_REQ}}
      payload: '{ "cmd": "on"}'
  mode: single

- alias: {{RELAY_11_CMD_REQ_OFF_AUTOMATION_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.relay_11
    from: 'on'
    to: 'off'
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: true
      topic: {{MQTT_RELAY_11_CMD_REQ}}
      payload: '{"cmd": "off"}'
  mode: single

- alias: {{RELAY_12_CMD_REQ_ON_AUTOMATION_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.relay_12
    from: 'off'
    to: 'on'
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: true
      topic: {{MQTT_RELAY_12_CMD_REQ}}
      payload: '{ "cmd": "on"}'
  mode: single

- alias: {{RELAY_12_CMD_REQ_OFF_AUTOMATION_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.relay_12
    from: 'on'
    to: 'off'
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: true
      topic: {{MQTT_RELAY_12_CMD_REQ}}
      payload: '{"cmd": "off"}'
  mode: single

# Relay 13 - 16
- alias: {{RELAY_13_CMD_REQ_ON_AUTOMATION_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.relay_13
    from: 'off'
    to: 'on'
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: true
      topic: {{MQTT_RELAY_13_CMD_REQ}}
      payload: '{ "cmd": "on"}'
  mode: single

- alias: {{RELAY_13_CMD_REQ_OFF_AUTOMATION_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.relay_13
    from: 'on'
    to: 'off'
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: true
      topic: {{MQTT_RELAY_13_CMD_REQ}}
      payload: '{"cmd": "off"}'
  mode: single

- alias: {{RELAY_14_CMD_REQ_ON_AUTOMATION_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.relay_14
    from: 'off'
    to: 'on'
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: true
      topic: {{MQTT_RELAY_14_CMD_REQ}}
      payload: '{ "cmd": "on"}'
  mode: single

- alias: {{RELAY_14_CMD_REQ_OFF_AUTOMATION_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.relay_14
    from: 'on'
    to: 'off'
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: true
      topic: {{MQTT_RELAY_14_CMD_REQ}}
      payload: '{"cmd": "off"}'
  mode: single

- alias: {{RELAY_15_CMD_REQ_ON_AUTOMATION_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.relay_15
    from: 'off'
    to: 'on'
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: true
      topic: {{MQTT_RELAY_15_CMD_REQ}}
      payload: '{ "cmd": "on"}'
  mode: single

- alias: {{RELAY_15_CMD_REQ_OFF_AUTOMATION_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.relay_15
    from: 'on'
    to: 'off'
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: true
      topic: {{MQTT_RELAY_15_CMD_REQ}}
      payload: '{"cmd": "off"}'
  mode: single

- alias: {{RELAY_16_CMD_REQ_ON_AUTOMATION_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.relay_16
    from: 'off'
    to: 'on'
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: true
      topic: {{MQTT_RELAY_16_CMD_REQ}}
      payload: '{ "cmd": "on"}'
  mode: single

- alias: {{RELAY_16_CMD_REQ_OFF_AUTOMATION_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.relay_16
    from: 'on'
    to: 'off'
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: true
      topic: {{MQTT_RELAY_16_CMD_REQ}}
      payload: '{"cmd": "off"}'
  mode: single

- alias: {{SOLID_STATE_RELAY_01_CMD_REQ_ON_AUTOMATION_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.solid_state_relay1
    from: 'off'
    to: 'on'
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: true
      topic: {{MQTT_SOLID_STATE_RELAY_01_CMD_REQ}}
      payload: '{"cmd": "on"}'
  mode: single

- alias: {{SOLID_STATE_RELAY_01_CMD_REQ_OFF_AUTOMATION_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.solid_state_relay1
    from: 'on'
    to: 'off'
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: true
      topic: {{MQTT_SOLID_STATE_RELAY_01_CMD_REQ}}
      payload: '{"cmd": "off"}'
  mode: single

- alias: {{SOLID_STATE_RELAY_01_CMD_REQ_AUTOMATION_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
      - input_number.ssr_duty_cycle
      - input_number.ssr_base_period
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data_template:
      qos: 0
      retain: true
      topic: {{MQTT_SOLID_STATE_RELAY_01_CMD_REQ}}
      payload: >
        {
          "cmd": "adjust_ssr_pwm",
          "res_topic": {{MQTT_SOLID_STATE_RELAY_01_CMD_RES}},
          "value_duty_cycle": "{{ SSR_DUTY_CYCLE }}",
          "value_base_period": "{{SSR_BASE_PERIOD}}"
        }
      
  mode: single

- alias: {{SOLID_STATE_RELAY_01_CMD_REQ_STOP_PWM_LOOP_AUTOMATION_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
      - input_boolean.solid_state_relay_stop_loop
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data_template:
      qos: 0
      retain: false
      topic: {{MQTT_SOLID_STATE_RELAY_01_CMD_REQ}}
      payload: >
        {
          "cmd": "ssr_stop_pwm_loop",
          "res_topic": {{MQTT_SOLID_STATE_RELAY_01_CMD_RES}},
          "value": "{{ SSR_STOP_LOOP }}"
        }
      
  mode: single

- alias: {{SOLID_STATE_RELAY_01_CMD_REQ_TURN_ON_FOR_AUTOMATION_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
      - input_number.ssr_turn_on_for
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data_template:
      qos: 0
      retain: false
      topic: {{MQTT_SOLID_STATE_RELAY_01_CMD_REQ}}
      payload: >
        {
          "cmd": "on_for",
          "time": "{{ SSR_TIME }}"
        }
      
  mode: single



# Fan voltage
- alias: {{MQTT_FAN_VOLTAGE_CMD_REQ_AUTOMATION_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
      - input_number.new_intake_fan_voltage
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data_template:
      qos: 0
      retain: true
      topic: {{MQTT_FAN_VOLTAGE_CMD_REQ}}
      payload: >
        {
          "cmd": "adjust",
          "res_topic": {{MQTT_FAN_VOLTAGE_CMD_RES}},
          "value": "{{ MQTT_FAN_VOLTAGE_STATE }}"
        }
      
  mode: single

  # Valve voltage
- alias: {{MQTT_VALVE_VOLTAGE_CMD_REQ_AUTOMATION_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
      - input_number.valve_voltage
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data_template:
      qos: 0
      retain: true
      topic: {{MQTT_VALVE_VOLTAGE_CMD_REQ}}
      payload: >
        {
          "cmd": "adjust",
          "res_topic": {{MQTT_VALVE_VOLTAGE_CMD_RES}},
          "value": "{{ MQTT_VALVE_VOLTAGE_STATE }}"
        }
      
  mode: single

# Elixia grow lamp1
- alias: {{LAMP_01_CMD_REQ_AUTOMATION_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
      - input_number.elixia_1_channel_450nm
      - input_number.elixia_1_channel_660nm
      - input_number.elixia_1_channel_735nm
      - input_number.elixia_1_channel_5700k
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data_template:
      qos: 0
      retain: false
      topic: {{MQTT_LAMP_01_CMD_REQ}}
      payload: >
        {
          "cmd": "adjust_intensity",
          "res_topic": {{MQTT_LAMP_01_CMD_RES}},
          "intensity": "{{ L1CHANNEL_450NM_STATE }}:{{ L1CHANNEL_660NM_STATE }}:{{ L1CHANNEL_735NM_STATE }}:{{ L1CHANNEL_5700K_STATE }}"
        }
      
  mode: single


  # Elixia grow lamp2
- alias: {{LAMP_02_CMD_REQ_AUTOMATION_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
      - input_number.elixia_2_channel_450nm
      - input_number.elixia_2_channel_660nm
      - input_number.elixia_2_channel_735nm
      - input_number.elixia_2_channel_5700k
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data_template:
      qos: 0
      retain: false
      topic: {{MQTT_LAMP_02_CMD_REQ}}
      payload: >
        {
          "cmd": "adjust_intensity",
          "res_topic": {{MQTT_LAMP_02_CMD_RES}},
          "intensity": "{{ L2CHANNEL_450NM_STATE }}:{{ L2CHANNEL_660NM_STATE }}:{{ L2CHANNEL_735NM_STATE }}:{{ L2CHANNEL_5700K_STATE }}"
        }
      
  mode: single

  # Ønsket fuktighet
- alias: {{MQTT_REF_HUMID_CMD_REQ_AUTOMATION_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
      - input_number.humid_ref
  condition: 
    - condition: state
      entity_id: input_boolean.pid_enable_toggle
      state: "on"
  action:
  - service: mqtt.publish
    metadata: {}
    data_template:
      qos: 0
      retain: true
      topic: {{MQTT_REF_HUMID_CMD_REQ}}
      payload: >
        {
          "cmd": "adjust_ref_humid",
          "res_topic": {{MQTT_REF_HUMID_CMD_RES}},
          "value": "{{ REF_HUMID }}"
        }
      
  mode: single

    # Ønsket temp
- alias: {{MQTT_REF_TEMP_CMD_REQ_AUTOMATION_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
      - input_number.temp_ref
  condition: 
    - condition: state
      entity_id: input_boolean.heating_pid_enable_toggle
      state: "on"
  action:
  - service: mqtt.publish
    metadata: {}
    data_template:
      qos: 0
      retain: true
      topic: {{MQTT_REF_TEMP_CMD_REQ}}
      payload: >
        {
          "cmd": "adjust_ref_temp",
          "res_topic": {{MQTT_REF_TEMP_CMD_RES}},
          "value": "{{ REF_TEMP }}"
        }
      
  mode: single


- alias: {{MQTT_REF_CO2_CMD_REQ_AUTOMATION_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
      - input_number.co2_ref
  condition: 
    - condition: state
      entity_id: input_boolean.co2_pid_enable_toggle
      state: "on"
  action:
  - service: mqtt.publish
    metadata: {}
    data_template:
      qos: 0
      retain: true
      topic: {{MQTT_REF_CO2_CMD_REQ}}
      payload: >
        {
          "cmd": "adjust_ref_CO2",
          "res_topic": {{MQTT_REF_CO2_CMD_RES}},
          "value": "{{ REF_CO2 }}"
        }
      
  mode: single


  #PID
- alias: {{COOLING_PID_CMD_REQ_AUTOMATION_ALIAS}}
  id: "cooling_pid_automation"
  description: 'Runs the cooling pid every 10 seconds if the toggle is ON'
  trigger:
  - platform: time_pattern
    seconds: /5
  #- platform: time_pattern
    #seconds: 25
  #- platform: time_pattern
    #seconds: 40
  #- platform: time_pattern
    #seconds: 55
  condition: 
    - condition: state
      entity_id: input_boolean.cooling_pid_enable_toggle
      state: "on"

  action:
  - service: mqtt.publish
    metadata: {}
    data_template:
      qos: 0
      retain: true
      topic: {{MQTT_COOLING_PID_ENABLE_CMD_REQ}}
      payload: '{"cmd": "pid_enable"}'
      
  mode: single
 


- alias: {{HEATING_PID_CMD_REQ_AUTOMATION_ALIAS}}
  id: "heating_pid_automation"
  description: 'Runs the heating pid every 10 seconds if toggle is ON'
  trigger:
  - platform: time_pattern
    seconds: /10
  condition: 
    - condition: state
      entity_id: input_boolean.heating_pid_enable_toggle
      state: "on"

  action:
  - service: mqtt.publish
    metadata: {}
    data_template:
      qos: 0
      retain: true
      topic: {{MQTT_HEATING_PID_ENABLE_CMD_REQ}}
      payload: '{"cmd": "pid_enable"}'
      
  mode: single
  
- alias: {{CO2_PID_CMD_REQ_AUTOMATION_ALIAS}}
  id: "co2_pid_automation"
  description: 'Runs the CO2 pid every 10 seconds if toggle is ON'
  trigger:
  - platform: time_pattern
    seconds: 0
  condition: 
    - condition: state
      entity_id: input_boolean.co2_pid_enable_toggle
      state: "on"

  action:
  - service: mqtt.publish
    metadata: {}
    data_template:
      qos: 0
      retain: true
      topic: {{MQTT_CO2_PID_ENABLE_CMD_REQ}}
      payload: '{"cmd": "pid_enable"}'
      
  mode: single

- alias : "Enable grow climate"
  id: "grow_climate_automation"
  description: "Enables all HVAC systems, preps the container for optimal growth climate"
  trigger:
    - platform: state
      entity_id: "input_boolean.hvac_operation"
      from: "off"
      to: "on"
  action:
    # Turn on or off intake fan and PIDs based on state
    - choose:
        - conditions:
            - condition: state
              entity_id: "input_boolean.hvac_operation"
              state: "on"
          sequence:
            - service: input_number.set_value
              target: 
                entity_id: "input_number.new_intake_fan_voltage"
              data: 
                value: 8

            - service: input_boolean.turn_on
              target:
                entity_id: 
                  - input_boolean.co2_pid_enable_toggle
                  - input_boolean.heating_pid_enable_toggle
                  - input_boolean.cooling_pid_enable_toggle

            - service: logbook.log
              data:
                name: "Grow Climate"
                message: "All PIDs and Fan Voltage set. HVAC operation started."

        - conditions:
            - condition: state
              entity_id: "input_boolean.hvac_operation"
              state: "off"
          sequence:
            - service: input_number.set_value
              target: 
                entity_id: "input_number.new_intake_fan_voltage"
              data: 
                value: 0  # Set it back to 0 when HVAC is off

            - service: input_boolean.turn_off
              target:
                entity_id: 
                  - input_boolean.co2_pid_enable_toggle
                  - input_boolean.heating_pid_enable_toggle
                  - input_boolean.cooling_pid_enable_toggle

            - service: logbook.log
              data:
                name: "Grow Climate"
                message: "All PIDs and Fan Voltage turned off. HVAC operation stopped."