# Automations
# Sensors #
- alias: {{SENSOR_01_DT_REQ_AUTOMATION_ALIAS}}
  description: ''
  trigger:
  - platform: time_pattern
    seconds: /{{SENSOR_01_DT_REQ_INTERVAL_SEC}}
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: false
      topic: {{MQTT_SENSOR_01_DT_REQ}}
      payload: '{"req_topic": {{MQTT_SENSOR_01_DT_REQ}}, "res_topic": {{MQTT_SENSOR_01_DT_RES}},
        "data": "ha_req" }'
  mode: single

- alias: {{SENSOR_02_DT_REQ_AUTOMATION_ALIAS}}
  description: ''
  trigger:
  - platform: time_pattern
    seconds: /{{SENSOR_02_DT_REQ_INTERVAL_SEC}}
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: false
      topic: {{MQTT_SENSOR_02_DT_REQ}}
      payload: '{"req_topic": {{MQTT_SENSOR_02_DT_REQ}}, "res_topic": {{MQTT_SENSOR_02_DT_RES}},
        "data": "ha_req" }'
  mode: single

- alias: {{SENSOR_03_DT_REQ_AUTOMATION_ALIAS}}
  description: ''
  trigger:
  - platform: time_pattern
    seconds: /{{SENSOR_03_DT_REQ_INTERVAL_SEC}}
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: false
      topic: {{MQTT_SENSOR_03_DT_REQ}}
      payload: '{"req_topic": {{MQTT_SENSOR_03_DT_REQ}}, "res_topic": {{MQTT_SENSOR_03_DT_RES}},
        "data": "ha_req" }'
  mode: single

- alias: {{SENSOR_03_INIT_CALIBRATION_1413_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.calibrate_s_ec_01_1
    from:
    to: Initiate calibration for EC 1413us/cm
  condition: []
  action:
  - service: input_text.set_value
    metadata: {}
    data:
      value: Immerse probe in 1413us/cm, register calibration afte a while.
    target:
      entity_id: input_text.calibration_status
  mode: single

- alias: {{SENSOR_03_REG_CALIBRATION_1413_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.calibrate_s_ec_01_1
    from:
    to: Register calibration for EC 1413us/cm
  condition: []
  action:
  - service: input_text.set_value
    metadata: {}
    data:
      value: Registered calibration for EC sensor 1 for 1413us/cm reference.
    target:
      entity_id: input_text.calibration_status
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: false
      topic: {{MQTT_SENSOR_03_CMD_REQ}}
      payload: '{ "cmd": "calibrate_ec_1413", "res_topic": {{MQTT_SENSOR_03_DT_RES}}}'
  mode: single

- alias: {{SENSOR_03_END_CALIBRATION_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.calibrate_s_ec_01_1
    from:
    to: Normal Operation
  condition: []
  action:
  - service: input_text.set_value
    metadata: {}
    data:
      value: Sensor has returned to normal operation.
    target:
      entity_id: input_text.calibration_status
  mode: single

- alias: {{SENSOR_03_INIT_CALIBRATION_12880_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.calibrate_s_ec_01_1
    from:
    to: Initiate calibration for EC 12880us/cm
  condition: []
  action:
  - service: input_text.set_value
    metadata: {}
    data:
      value: Immerse probe in 12880us/cm, register calibration afte a while.
    target:
      entity_id: input_text.calibration_status
  mode: single

- alias: {{SENSOR_03_REG_CALIBRATION_12880_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.calibrate_s_ec_01_1
    from:
    to: Register calibration for EC 12880us/cm
  condition: []
  action:
  - service: input_text.set_value
    metadata: {}
    data:
      value: Registered calibration for EC sensor 1 for 12880us/cm reference.
    target:
      entity_id: input_text.calibration_status
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: false
      topic: {{MQTT_SENSOR_03_CMD_REQ}}
      payload: '{ "cmd": "calibrate_ec_12880", "res_topic": {{MQTT_SENSOR_03_DT_RES}}}'
  mode: single

- alias: {{SENSOR_04_DT_REQ_AUTOMATION_ALIAS}}
  description: ''
  trigger:
  - platform: time_pattern
    seconds: /{{SENSOR_04_DT_REQ_INTERVAL_SEC}}
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: false
      topic: {{MQTT_SENSOR_04_DT_REQ}}
      payload: '{"req_topic": {{MQTT_SENSOR_04_DT_REQ}}, "res_topic": {{MQTT_SENSOR_04_DT_RES}},
        "data": "ha_req" }'
  mode: single

- alias: {{SENSOR_04_INIT_CALIBRATION_1413_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.calibrate_s_ec_01_2
    from:
    to: Initiate calibration for EC 1413us/cm
  condition: []
  action:
  - service: input_text.set_value
    metadata: {}
    data:
      value: Immerse probe in 1413us/cm, register calibration afte a while.
    target:
      entity_id: input_text.calibration_status
  mode: single

- alias: {{SENSOR_04_REG_CALIBRATION_1413_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.calibrate_s_ec_01_2
    from:
    to: Register calibration for EC 1413us/cm
  condition: []
  action:
  - service: input_text.set_value
    metadata: {}
    data:
      value: Registered calibration for EC sensor 2 for 1413us/cm reference.
    target:
      entity_id: input_text.calibration_status
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: false
      topic: {{MQTT_SENSOR_04_CMD_REQ}}
      payload: '{ "cmd": "calibrate_ec_1413", "res_topic": {{MQTT_SENSOR_04_DT_RES}}}'
  mode: single

- alias: {{SENSOR_04_END_CALIBRATION_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.calibrate_s_ec_01_2
    from:
    to: Normal Operation
  condition: []
  action:
  - service: input_text.set_value
    metadata: {}
    data:
      value: Sensor has returned to normal operation.
    target:
      entity_id: input_text.calibration_status
  mode: single

- alias: {{SENSOR_04_INIT_CALIBRATION_12880_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.calibrate_s_ec_01_2
    from:
    to: Initiate calibration for EC 12880us/cm
  condition: []
  action:
  - service: input_text.set_value
    metadata: {}
    data:
      value: Immerse probe in 12880us/cm, register calibration afte a while.
    target:
      entity_id: input_text.calibration_status
  mode: single

- alias: {{SENSOR_04_REG_CALIBRATION_12880_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.calibrate_s_ec_01_2
    from:
    to: Register calibration for EC 12880us/cm
  condition: []
  action:
  - service: input_text.set_value
    metadata: {}
    data:
      value: Registered calibration for EC sensor 2 for 12880us/cm reference.
    target:
      entity_id: input_text.calibration_status
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: false
      topic: {{MQTT_SENSOR_04_CMD_REQ}}
      payload: '{ "cmd": "calibrate_ec_12880", "res_topic": {{MQTT_SENSOR_04_DT_RES}}}'
  mode: single

- alias: {{SENSOR_05_DT_REQ_AUTOMATION_ALIAS}}
  description: ''
  trigger:
  - platform: time_pattern
    seconds: /{{SENSOR_05_DT_REQ_INTERVAL_SEC}}
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: false
      topic: {{MQTT_SENSOR_05_DT_REQ}}
      payload: '{"req_topic": {{MQTT_SENSOR_05_DT_REQ}}, "res_topic": {{MQTT_SENSOR_05_DT_RES}},
        "data": "ha_req" }'
  mode: single

- alias: {{SENSOR_05_INIT_CALIBRATION_0401_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.calibrate_s_ph_01_1
    from:
    to: Initiate calibration for pH 4.01
  condition: []
  action:
  - service: input_text.set_value
    metadata: {}
    data:
      value: Immerse probe in pH 4.01, register calibration afte a while.
    target:
      entity_id: input_text.calibration_status
  mode: single

- alias: {{SENSOR_05_REG_CALIBRATION_0401_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.calibrate_s_ph_01_1
    from:
    to: Register calibration for pH 4.01
  condition: []
  action:
  - service: input_text.set_value
    metadata: {}
    data:
      value: Registered calibration for pH sensor 1 for pH 4.01 reference.
    target:
      entity_id: input_text.calibration_status
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: false
      topic: {{MQTT_SENSOR_05_CMD_REQ}}
      payload: '{ "cmd": "calibrate_ph_0401", "res_topic": {{MQTT_SENSOR_05_DT_RES}}}'
  mode: single

- alias: {{SENSOR_05_END_CALIBRATION_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.calibrate_s_ph_01_1
    from:
    to: Normal Operation
  condition: []
  action:
  - service: input_text.set_value
    metadata: {}
    data:
      value: Sensor has returned to normal operation.
    target:
      entity_id: input_text.calibration_status
  mode: single

- alias: {{SENSOR_05_INIT_CALIBRATION_0700_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.calibrate_s_ph_01_1
    from:
    to: Initiate calibration for pH 7.00
  condition: []
  action:
  - service: input_text.set_value
    metadata: {}
    data:
      value: Immerse probe in pH 7.00, register calibration afte a while.
    target:
      entity_id: input_text.calibration_status
  mode: single

- alias: {{SENSOR_05_REG_CALIBRATION_0700_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.calibrate_s_ph_01_1
    from:
    to: Register calibration for pH 7.00
  condition: []
  action:
  - service: input_text.set_value
    metadata: {}
    data:
      value: Registered calibration for pH sensor 1 for pH 7.00 reference.
    target:
      entity_id: input_text.calibration_status
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: false
      topic: {{MQTT_SENSOR_05_CMD_REQ}}
      payload: '{ "cmd": "calibrate_ph_0700", "res_topic": {{MQTT_SENSOR_05_DT_RES}}}'
  mode: single

- alias: {{SENSOR_05_INIT_CALIBRATION_1001_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.calibrate_s_ph_01_1
    from:
    to: Initiate calibration for pH 10.01
  condition: []
  action:
  - service: input_text.set_value
    metadata: {}
    data:
      value: Immerse probe in pH 10.01, register calibration afte a while.
    target:
      entity_id: input_text.calibration_status
  mode: single

- alias: {{SENSOR_05_REG_CALIBRATION_1001_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.calibrate_s_ph_01_1
    from:
    to: Register calibration for pH 10.01
  condition: []
  action:
  - service: input_text.set_value
    metadata: {}
    data:
      value: Registered calibration for pH sensor 1 for pH 10.01 reference.
    target:
      entity_id: input_text.calibration_status
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: false
      topic: {{MQTT_SENSOR_05_CMD_REQ}}
      payload: '{ "cmd": "calibrate_ph_1001", "res_topic": {{MQTT_SENSOR_05_DT_RES}}}'
  mode: single

- alias: {{SENSOR_06_DT_REQ_AUTOMATION_ALIAS}}
  description: ''
  trigger:
  - platform: time_pattern
    seconds: /{{SENSOR_06_DT_REQ_INTERVAL_SEC}}
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: false
      topic: {{MQTT_SENSOR_06_DT_REQ}}
      payload: '{"req_topic": {{MQTT_SENSOR_06_DT_REQ}}, "res_topic": {{MQTT_SENSOR_06_DT_RES}},
        "data": "ha_req" }'
  mode: single

- alias: {{SENSOR_06_INIT_CALIBRATION_0401_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.calibrate_s_ph_01_2
    from:
    to: Initiate calibration for pH 4.01
  condition: []
  action:
  - service: input_text.set_value
    metadata: {}
    data:
      value: Immerse probe in pH 4.01, register calibration afte a while.
    target:
      entity_id: input_text.calibration_status
  mode: single

- alias: {{SENSOR_06_REG_CALIBRATION_0401_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.calibrate_s_ph_01_2
    from:
    to: Register calibration for pH 4.01
  condition: []
  action:
  - service: input_text.set_value
    metadata: {}
    data:
      value: Registered calibration for pH sensor 2 for pH 4.01 reference.
    target:
      entity_id: input_text.calibration_status
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: false
      topic: {{MQTT_SENSOR_06_CMD_REQ}}
      payload: '{ "cmd": "calibrate_ph_0401", "res_topic": {{MQTT_SENSOR_06_DT_RES}}}'
  mode: single

- alias: {{SENSOR_06_END_CALIBRATION_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.calibrate_s_ph_01_2
    from:
    to: Normal Operation
  condition: []
  action:
  - service: input_text.set_value
    metadata: {}
    data:
      value: Sensor has returned to normal operation.
    target:
      entity_id: input_text.calibration_status
  mode: single

- alias: {{SENSOR_06_INIT_CALIBRATION_0700_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.calibrate_s_ph_01_2
    from:
    to: Initiate calibration for pH 7.00
  condition: []
  action:
  - service: input_text.set_value
    metadata: {}
    data:
      value: Immerse probe in pH 7.00, register calibration afte a while.
    target:
      entity_id: input_text.calibration_status
  mode: single

- alias: {{SENSOR_06_REG_CALIBRATION_0700_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.calibrate_s_ph_01_2
    from:
    to: Register calibration for pH 7.00
  condition: []
  action:
  - service: input_text.set_value
    metadata: {}
    data:
      value: Registered calibration for pH sensor 2 for pH 7.00 reference.
    target:
      entity_id: input_text.calibration_status
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: false
      topic: {{MQTT_SENSOR_06_CMD_REQ}}
      payload: '{ "cmd": "calibrate_ph_0700", "res_topic": {{MQTT_SENSOR_06_DT_RES}}}'
  mode: single

- alias: {{SENSOR_06_INIT_CALIBRATION_1001_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.calibrate_s_ph_01_2
    from:
    to: Initiate calibration for pH 10.01
  condition: []
  action:
  - service: input_text.set_value
    metadata: {}
    data:
      value: Immerse probe in pH 10.01, register calibration afte a while.
    target:
      entity_id: input_text.calibration_status
  mode: single

- alias: {{SENSOR_06_REG_CALIBRATION_1001_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.calibrate_s_ph_01_2
    from:
    to: Register calibration for pH 10.01
  condition: []
  action:
  - service: input_text.set_value
    metadata: {}
    data:
      value: Registered calibration for pH sensor 2 for pH 10.01 reference.
    target:
      entity_id: input_text.calibration_status
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: false
      topic: {{MQTT_SENSOR_06_CMD_REQ}}
      payload: '{ "cmd": "calibrate_ph_1001", "res_topic": {{MQTT_SENSOR_06_DT_RES}}}'
  mode: single

- alias: {{SENSOR_11_DT_REQ_AUTOMATION_ALIAS}} 
  description: ''
  trigger:
  - platform: time_pattern
    seconds: /{{SENSOR_11_DT_REQ_INTERVAL_SEC}}
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: false
      topic: {{MQTT_SENSOR_11_DT_REQ}}
      payload: '{"req_topic": {{MQTT_SENSOR_11_DT_REQ}}, "res_topic": {{MQTT_SENSOR_11_DT_RES}},
        "data": "ha_req" }'
  mode: single

- alias: {{SENSOR_13_DT_REQ_AUTOMATION_ALIAS}} 
  description: ''
  trigger:
  - platform: time_pattern
    seconds: /{{SENSOR_13_DT_REQ_INTERVAL_SEC}}
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: false
      topic: {{MQTT_SENSOR_13_DT_REQ}}
      payload: '{"req_topic": {{MQTT_SENSOR_13_DT_REQ}}, "res_topic": {{MQTT_SENSOR_13_DT_RES}},
        "data": "ha_req" }'
  mode: single

- alias: {{SENSOR_10_DT_REQ_AUTOMATION_ALIAS}}
  description: ''
  trigger:
  - platform: time_pattern
    seconds: /{{SENSOR_10_DT_REQ_INTERVAL_SEC}}
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: false
      topic: {{MQTT_SENSOR_10_DT_REQ}}
      payload: '{"req_topic": {{MQTT_SENSOR_10_DT_REQ}}, "res_topic": {{MQTT_SENSOR_10_DT_RES}},
        "data": "ha_req" }'
  mode: single

# Relays #
# Relay automations for toggle-on-off switch (input_boolean) on relay 01-16
- alias: {{RELAY_01_CMD_REQ_ON_AUTOMATION_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.relay_1
    from: 'off'
    to: 'on'
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: false
      topic: {{MQTT_RELAY_01_CMD_REQ}}
      payload: '{ "cmd": "on"}'
  mode: single

- alias: {{RELAY_01_CMD_REQ_OFF_AUTOMATION_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.relay_1
    from: 'on'
    to: 'off'
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: false
      topic: {{MQTT_RELAY_01_CMD_REQ}}
      payload: '{"cmd": "off"}'
  mode: single

- alias: {{RELAY_02_CMD_REQ_ON_AUTOMATION_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.relay_2
    from: 'off'
    to: 'on'
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: false
      topic: {{MQTT_RELAY_02_CMD_REQ}}
      payload: '{ "cmd": "on"}'
  mode: single

- alias: {{RELAY_02_CMD_REQ_OFF_AUTOMATION_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.relay_2
    from: 'on'
    to: 'off'
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: false
      topic: {{MQTT_RELAY_02_CMD_REQ}}
      payload: '{"cmd": "off"}'
  mode: single

- alias: {{RELAY_03_CMD_REQ_ON_AUTOMATION_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.relay_3
    from: 'off'
    to: 'on'
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: false
      topic: {{MQTT_RELAY_03_CMD_REQ}}
      payload: '{ "cmd": "on"}'
  mode: single

- alias: {{RELAY_03_CMD_REQ_OFF_AUTOMATION_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.relay_3
    from: 'on'
    to: 'off'
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: false
      topic: {{MQTT_RELAY_03_CMD_REQ}}
      payload: '{"cmd": "off"}'
  mode: single

- alias: {{RELAY_04_CMD_REQ_ON_AUTOMATION_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.relay_4
    from: 'off'
    to: 'on'
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: false
      topic: {{MQTT_RELAY_04_CMD_REQ}}
      payload: '{ "cmd": "on"}'
  mode: single

- alias: {{RELAY_04_CMD_REQ_OFF_AUTOMATION_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.relay_4
    from: 'on'
    to: 'off'
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: false
      topic: {{MQTT_RELAY_04_CMD_REQ}}
      payload: '{"cmd": "off"}'
  mode: single

- alias: {{RELAY_05_CMD_REQ_ON_AUTOMATION_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.relay_5
    from: 'off'
    to: 'on'
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: false
      topic: {{MQTT_RELAY_05_CMD_REQ}}
      payload: '{ "cmd": "on"}'
  mode: single

- alias: {{RELAY_05_CMD_REQ_OFF_AUTOMATION_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.relay_5
    from: 'on'
    to: 'off'
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: false
      topic: {{MQTT_RELAY_05_CMD_REQ}}
      payload: '{"cmd": "off"}'
  mode: single

- alias: {{RELAY_06_CMD_REQ_ON_AUTOMATION_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.relay_6
    from: 'off'
    to: 'on'
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: false
      topic: {{MQTT_RELAY_06_CMD_REQ}}
      payload: '{ "cmd": "on"}'
  mode: single

- alias: {{RELAY_06_CMD_REQ_OFF_AUTOMATION_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.relay_6
    from: 'on'
    to: 'off'
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: false
      topic: {{MQTT_RELAY_06_CMD_REQ}}
      payload: '{"cmd": "off"}'
  mode: single

- alias: {{RELAY_07_CMD_REQ_ON_AUTOMATION_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.relay_7
    from: 'off'
    to: 'on'
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: false
      topic: {{MQTT_RELAY_07_CMD_REQ}}
      payload: '{ "cmd": "on"}'
  mode: single

- alias: {{RELAY_07_CMD_REQ_OFF_AUTOMATION_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.relay_7
    from: 'on'
    to: 'off'
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: false
      topic: {{MQTT_RELAY_07_CMD_REQ}}
      payload: '{"cmd": "off"}'
  mode: single

- alias: {{RELAY_08_CMD_REQ_ON_AUTOMATION_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.relay_8
    from: 'off'
    to: 'on'
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: false
      topic: {{MQTT_RELAY_08_CMD_REQ}}
      payload: '{ "cmd": "on"}'
  mode: single

- alias: {{RELAY_08_CMD_REQ_OFF_AUTOMATION_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.relay_8
    from: 'on'
    to: 'off'
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: false
      topic: {{MQTT_RELAY_08_CMD_REQ}}
      payload: '{"cmd": "off"}'
  mode: single

- alias: {{RELAY_09_CMD_REQ_ON_AUTOMATION_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.relay_9
    from: 'off'
    to: 'on'
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: false
      topic: {{MQTT_RELAY_09_CMD_REQ}}
      payload: '{ "cmd": "on"}'
  mode: single

- alias: {{RELAY_09_CMD_REQ_OFF_AUTOMATION_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.relay_9
    from: 'on'
    to: 'off'
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: false
      topic: {{MQTT_RELAY_09_CMD_REQ}}
      payload: '{"cmd": "off"}'
  mode: single

- alias: {{RELAY_10_CMD_REQ_ON_AUTOMATION_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.relay_10
    from: 'off'
    to: 'on'
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: false
      topic: {{MQTT_RELAY_10_CMD_REQ}}
      payload: '{ "cmd": "on"}'
  mode: single

- alias: {{RELAY_10_CMD_REQ_OFF_AUTOMATION_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.relay_10
    from: 'on'
    to: 'off'
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: false
      topic: {{MQTT_RELAY_10_CMD_REQ}}
      payload: '{"cmd": "off"}'
  mode: single

- alias: {{RELAY_11_CMD_REQ_ON_AUTOMATION_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.relay_11
    from: 'off'
    to: 'on'
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: false
      topic: {{MQTT_RELAY_11_CMD_REQ}}
      payload: '{ "cmd": "on"}'
  mode: single

- alias: {{RELAY_11_CMD_REQ_OFF_AUTOMATION_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.relay_11
    from: 'on'
    to: 'off'
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: false
      topic: {{MQTT_RELAY_11_CMD_REQ}}
      payload: '{"cmd": "off"}'
  mode: single

- alias: {{RELAY_12_CMD_REQ_ON_AUTOMATION_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.relay_12
    from: 'off'
    to: 'on'
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: false
      topic: {{MQTT_RELAY_12_CMD_REQ}}
      payload: '{ "cmd": "on"}'
  mode: single

- alias: {{RELAY_12_CMD_REQ_OFF_AUTOMATION_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.relay_12
    from: 'on'
    to: 'off'
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: false
      topic: {{MQTT_RELAY_12_CMD_REQ}}
      payload: '{"cmd": "off"}'
  mode: single

# Relay 13 - 16
- alias: {{RELAY_13_CMD_REQ_ON_AUTOMATION_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.relay_13
    from: 'off'
    to: 'on'
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: false
      topic: {{MQTT_RELAY_13_CMD_REQ}}
      payload: '{ "cmd": "on"}'
  mode: single

- alias: {{RELAY_13_CMD_REQ_OFF_AUTOMATION_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.relay_13
    from: 'on'
    to: 'off'
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: false
      topic: {{MQTT_RELAY_13_CMD_REQ}}
      payload: '{"cmd": "off"}'
  mode: single

- alias: {{RELAY_14_CMD_REQ_ON_AUTOMATION_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.relay_14
    from: 'off'
    to: 'on'
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: false
      topic: {{MQTT_RELAY_14_CMD_REQ}}
      payload: '{ "cmd": "on"}'
  mode: single

- alias: {{RELAY_14_CMD_REQ_OFF_AUTOMATION_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.relay_14
    from: 'on'
    to: 'off'
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: false
      topic: {{MQTT_RELAY_14_CMD_REQ}}
      payload: '{"cmd": "off"}'
  mode: single

- alias: {{RELAY_15_CMD_REQ_ON_AUTOMATION_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.relay_15
    from: 'off'
    to: 'on'
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: false
      topic: {{MQTT_RELAY_15_CMD_REQ}}
      payload: '{ "cmd": "on"}'
  mode: single

- alias: {{RELAY_15_CMD_REQ_OFF_AUTOMATION_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.relay_15
    from: 'on'
    to: 'off'
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: false
      topic: {{MQTT_RELAY_15_CMD_REQ}}
      payload: '{"cmd": "off"}'
  mode: single

- alias: {{RELAY_16_CMD_REQ_ON_AUTOMATION_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.relay_16
    from: 'off'
    to: 'on'
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: false
      topic: {{MQTT_RELAY_16_CMD_REQ}}
      payload: '{ "cmd": "on"}'
  mode: single

- alias: {{RELAY_16_CMD_REQ_OFF_AUTOMATION_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.relay_16
    from: 'on'
    to: 'off'
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: false
      topic: {{MQTT_RELAY_16_CMD_REQ}}
      payload: '{"cmd": "off"}'
  mode: single

# Elixia grow lamp1
- alias: {{LAMP_01_CMD_REQ_AUTOMATION_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
      - input_number.elixia_1_channel_450nm
      - input_number.elixia_1_channel_660nm
      - input_number.elixia_1_channel_735nm
      - input_number.elixia_1_channel_5700k
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data_template:
      qos: 0
      retain: false
      topic: {{MQTT_LAMP_01_CMD_REQ}}
      payload: >
        {
          "cmd": "adjust_intensity",
          "res_topic": {{MQTT_LAMP_01_CMD_RES}},
          "intensity": "{{ CHANNEL_450NM_STATE }}:{{ CHANNEL_660NM_STATE }}:{{ CHANNEL_735NM_STATE }}:{{ CHANNEL_5700K_STATE }}"
        }
      
  mode: single


  # Elixia grow lamp2
- alias: {{LAMP_02_CMD_REQ_AUTOMATION_ALIAS}}
  description: ''
  trigger:
  - platform: state
    entity_id:
      - input_number.elixia_2_channel_450nm
      - input_number.elixia_2_channel_660nm
      - input_number.elixia_2_channel_735nm
      - input_number.elixia_2_channel_5700k
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data_template:
      qos: 0
      retain: false
      topic: {{MQTT_LAMP_02_CMD_REQ}}
      payload: >
        {
          "cmd": "adjust_intensity",
          "res_topic": {{MQTT_LAMP_02_CMD_RES}},
          "intensity": "{{ CHANNEL_450NM_STATE }}:{{ CHANNEL_660NM_STATE }}:{{ CHANNEL_735NM_STATE }}:{{ CHANNEL_5700K_STATE }}"
        }
      
  mode: single