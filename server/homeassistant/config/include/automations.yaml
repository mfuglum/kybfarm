#───────────────────────────────────────────────────────────────────────#
# Section: SENSOR REQUEST AUTOMATIONS
# Purpose: Periodically send MQTT requests for each sensor data
#───────────────────────────────────────────────────────────────────────#

#S-LIGHT-01 [Light]#
#───────────────────────────────────────────────────────────────────────#
#__Request__#
- alias: "S-LIGHT-01 Request"
  description: ''
  trigger:
  - platform: time_pattern
    seconds: 1
  - platform: time_pattern
    seconds: 31
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: false
      topic: "dt/gf/slight01/req"
      payload: '{"req_topic": "dt/gf/slight01/req", "res_topic": "dt/gf/slight01/res",
        "data": "ha_req" }'
  mode: single
#───────────────────────────────────────────────────────────────────────#


#S-PAR-02 [Photosynthetically Active Radiation]#
#───────────────────────────────────────────────────────────────────────#
#__Request__#
- alias: "S-PAR-02 Request"
  description: ''
  trigger:
  - platform: time_pattern
    seconds: 2
  - platform: time_pattern
    seconds: 32
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: false
      topic: "dt/gf/spar02/req"
      payload: '{"req_topic": "dt/gf/spar02/req", "res_topic": "dt/gf/spar02/res",
        "data": "ha_req" }'
  mode: single
#───────────────────────────────────────────────────────────────────────#


#S-EC-01-1 [Electro Conductivity, Temperature & Total Dissolved Solids]
#───────────────────────────────────────────────────────────────────────#
#__Sensor 1 Request__#
- alias: "S-EC-01-1 Request"
  description: ''
  trigger:
  - platform: time_pattern
    seconds: 3
  - platform: time_pattern
    seconds: 33
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: false
      topic: "dt/gf/sec01/1/req"
      payload: '{"req_topic": "dt/gf/sec01/1/req", "res_topic": "dt/gf/sec01/1/res",
        "data": "ha_req" }'
  mode: single

#__Sensor 1 Calibration__#
- alias: "Initiate calibration for EC sensor 1  for 1413us/cm reference"
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.calibrate_s_ec_01_1
    from:
    to: Initiate calibration for EC 1413us/cm
  condition: []
  action:
  - service: input_text.set_value
    metadata: {}
    data:
      value: Immerse probe in 1413us/cm, register calibration afte a while.
    target:
      entity_id: input_text.calibration_status
  mode: single

- alias: "Register calibration for EC sensor 1  for 1413us/cm reference"
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.calibrate_s_ec_01_1
    from:
    to: Register calibration for EC 1413us/cm
  condition: []
  action:
  - service: input_text.set_value
    metadata: {}
    data:
      value: Registered calibration for EC sensor 1 for 1413us/cm reference.
    target:
      entity_id: input_text.calibration_status
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: false
      topic: "cmd/sec01/1/req"
      payload: '{ "cmd": "calibrate_ec_1413", "res_topic": "dt/gf/sec01/1/res"}'
  mode: single

- alias: "Return to normal operation EC sensor 1"
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.calibrate_s_ec_01_1
    from:
    to: Normal Operation
  condition: []
  action:
  - service: input_text.set_value
    metadata: {}
    data:
      value: Sensor has returned to normal operation.
    target:
      entity_id: input_text.calibration_status
  mode: single

- alias: "Initiate calibration for EC sensor 1  for 12880us/cm reference"
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.calibrate_s_ec_01_1
    from:
    to: Initiate calibration for EC 12880us/cm
  condition: []
  action:
  - service: input_text.set_value
    metadata: {}
    data:
      value: Immerse probe in 12880us/cm, register calibration afte a while.
    target:
      entity_id: input_text.calibration_status
  mode: single

- alias: "Register calibration for EC sensor 1  for 12880us/cm reference"
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.calibrate_s_ec_01_1
    from:
    to: Register calibration for EC 12880us/cm
  condition: []
  action:
  - service: input_text.set_value
    metadata: {}
    data:
      value: Registered calibration for EC sensor 1 for 12880us/cm reference.
    target:
      entity_id: input_text.calibration_status
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: false
      topic: "cmd/sec01/1/req"
      payload: '{ "cmd": "calibrate_ec_12880", "res_topic": "dt/gf/sec01/1/res"}'
  mode: single


#__Sensor 2 Request__#
- alias: "S-EC-01-2 Request"
  description: ''
  trigger:
  - platform: time_pattern
    seconds: 4
  - platform: time_pattern
    seconds: 34
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: false
      topic: "dt/gf/sec01/2/req"
      payload: '{"req_topic": "dt/gf/sec01/2/req", "res_topic": "dt/gf/sec01/2/res",
        "data": "ha_req" }'
  mode: single

#__Sensor 2 Calibration__#
- alias: "Initiate calibration for EC sensor 2  for 1413us/cm reference"
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.calibrate_s_ec_01_2
    from:
    to: Initiate calibration for EC 1413us/cm
  condition: []
  action:
  - service: input_text.set_value
    metadata: {}
    data:
      value: Immerse probe in 1413us/cm, register calibration afte a while.
    target:
      entity_id: input_text.calibration_status
  mode: single

- alias: "Register calibration for EC sensor 2  for 1413us/cm reference"
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.calibrate_s_ec_01_2
    from:
    to: Register calibration for EC 1413us/cm
  condition: []
  action:
  - service: input_text.set_value
    metadata: {}
    data:
      value: Registered calibration for EC sensor 2 for 1413us/cm reference.
    target:
      entity_id: input_text.calibration_status
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: false
      topic: "cmd/sec01/2/req"
      payload: '{ "cmd": "calibrate_ec_1413", "res_topic": "dt/gf/sec01/2/res"}'
  mode: single

- alias: "Return to normal operation EC sensor 2"
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.calibrate_s_ec_01_2
    from:
    to: Normal Operation
  condition: []
  action:
  - service: input_text.set_value
    metadata: {}
    data:
      value: Sensor has returned to normal operation.
    target:
      entity_id: input_text.calibration_status
  mode: single

- alias: "Initiate calibration for EC sensor 2  for 12880us/cm reference"
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.calibrate_s_ec_01_2
    from:
    to: Initiate calibration for EC 12880us/cm
  condition: []
  action:
  - service: input_text.set_value
    metadata: {}
    data:
      value: Immerse probe in 12880us/cm, register calibration afte a while.
    target:
      entity_id: input_text.calibration_status
  mode: single

- alias: "Register calibration for EC sensor 2  for 12880us/cm reference"
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.calibrate_s_ec_01_2
    from:
    to: Register calibration for EC 12880us/cm
  condition: []
  action:
  - service: input_text.set_value
    metadata: {}
    data:
      value: Registered calibration for EC sensor 2 for 12880us/cm reference.
    target:
      entity_id: input_text.calibration_status
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: false
      topic: "cmd/sec01/2/req"
      payload: '{ "cmd": "calibrate_ec_12880", "res_topic": "dt/gf/sec01/2/res"}'
  mode: single
#───────────────────────────────────────────────────────────────────────#


#S-PH-01-1 [pH & Temperature]
#───────────────────────────────────────────────────────────────────────#
#__Sensor 1 Request__#
- alias: "S-PH-01-1 Request"
  description: ''
  trigger:
  - platform: time_pattern
    seconds: 6
  - platform: time_pattern
    seconds: 36
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: false
      topic: "dt/gf/sph01/1/req"
      payload: '{"req_topic": "dt/gf/sph01/1/req", "res_topic": "dt/gf/sph01/1/res",
        "data": "ha_req" }'
  mode: single

#__Sensor 1 Calibration__#
- alias: "Initiate calibration for pH sensor 1  for 4.01pH reference"
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.calibrate_s_ph_01_1
    from:
    to: Initiate calibration for pH 4.01
  condition: []
  action:
  - service: input_text.set_value
    metadata: {}
    data:
      value: Immerse probe in pH 4.01, register calibration afte a while.
    target:
      entity_id: input_text.calibration_status
  mode: single

- alias: "Register calibration for pH sensor 1  for 4.01pH reference"
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.calibrate_s_ph_01_1
    from:
    to: Register calibration for pH 4.01
  condition: []
  action:
  - service: input_text.set_value
    metadata: {}
    data:
      value: Registered calibration for pH sensor 1 for pH 4.01 reference.
    target:
      entity_id: input_text.calibration_status
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: false
      topic: "cmd/sph01/1/req"
      payload: '{ "cmd": "calibrate_ph_0401", "res_topic": "dt/gf/sph01/1/res"}'
  mode: single

- alias: "Return to normal operation pH sensor 1"
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.calibrate_s_ph_01_1
    from:
    to: Normal Operation
  condition: []
  action:
  - service: input_text.set_value
    metadata: {}
    data:
      value: Sensor has returned to normal operation.
    target:
      entity_id: input_text.calibration_status
  mode: single

- alias: "Initiate calibration for pH sensor 1  for 7.00pH reference"
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.calibrate_s_ph_01_1
    from:
    to: Initiate calibration for pH 7.00
  condition: []
  action:
  - service: input_text.set_value
    metadata: {}
    data:
      value: Immerse probe in pH 7.00, register calibration afte a while.
    target:
      entity_id: input_text.calibration_status
  mode: single

- alias: "Register calibration for pH sensor 1  for 7.00pH reference"
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.calibrate_s_ph_01_1
    from:
    to: Register calibration for pH 7.00
  condition: []
  action:
  - service: input_text.set_value
    metadata: {}
    data:
      value: Registered calibration for pH sensor 1 for pH 7.00 reference.
    target:
      entity_id: input_text.calibration_status
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: false
      topic: "cmd/sph01/1/req"
      payload: '{ "cmd": "calibrate_ph_0700", "res_topic": "dt/gf/sph01/1/res"}'
  mode: single

- alias: "Initiate calibration for pH sensor 1  for 10.01pH reference"
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.calibrate_s_ph_01_1
    from:
    to: Initiate calibration for pH 10.01
  condition: []
  action:
  - service: input_text.set_value
    metadata: {}
    data:
      value: Immerse probe in pH 10.01, register calibration afte a while.
    target:
      entity_id: input_text.calibration_status
  mode: single

- alias: "Register calibration for pH sensor 1  for 10.01pH reference"
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.calibrate_s_ph_01_1
    from:
    to: Register calibration for pH 10.01
  condition: []
  action:
  - service: input_text.set_value
    metadata: {}
    data:
      value: Registered calibration for pH sensor 1 for pH 10.01 reference.
    target:
      entity_id: input_text.calibration_status
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: false
      topic: "cmd/sph01/1/req"
      payload: '{ "cmd": "calibrate_ph_1001", "res_topic": "dt/gf/sph01/1/res"}'
  mode: single


#__Sensor 2 Request__#
- alias: "S-PH-01-2 Request"
  description: ''
  trigger:
  - platform: time_pattern
    seconds: 7
  - platform: time_pattern
    seconds: 37
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: false
      topic: "dt/gf/sph01/2/req"
      payload: '{"req_topic": "dt/gf/sph01/2/req", "res_topic": "dt/gf/sph01/2/res",
        "data": "ha_req" }'
  mode: single

#__Sensor 2 Calibration__#
- alias: "Initiate calibration for pH sensor 2  for 4.01pH reference"
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.calibrate_s_ph_01_2
    from:
    to: Initiate calibration for pH 4.01
  condition: []
  action:
  - service: input_text.set_value
    metadata: {}
    data:
      value: Immerse probe in pH 4.01, register calibration afte a while.
    target:
      entity_id: input_text.calibration_status
  mode: single

- alias: "Register calibration for pH sensor 2  for 4.01pH reference"
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.calibrate_s_ph_01_2
    from:
    to: Register calibration for pH 4.01
  condition: []
  action:
  - service: input_text.set_value
    metadata: {}
    data:
      value: Registered calibration for pH sensor 2 for pH 4.01 reference.
    target:
      entity_id: input_text.calibration_status
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: false
      topic: "cmd/sph01/2/req"
      payload: '{ "cmd": "calibrate_ph_0401", "res_topic": "dt/gf/sph01/2/res"}'
  mode: single

- alias: "Return to normal operation pH sensor 2"
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.calibrate_s_ph_01_2
    from:
    to: Normal Operation
  condition: []
  action:
  - service: input_text.set_value
    metadata: {}
    data:
      value: Sensor has returned to normal operation.
    target:
      entity_id: input_text.calibration_status
  mode: single

- alias: "Initiate calibration for pH sensor 2  for 7.00pH reference"
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.calibrate_s_ph_01_2
    from:
    to: Initiate calibration for pH 7.00
  condition: []
  action:
  - service: input_text.set_value
    metadata: {}
    data:
      value: Immerse probe in pH 7.00, register calibration afte a while.
    target:
      entity_id: input_text.calibration_status
  mode: single

- alias: "Register calibration for pH sensor 2  for 7.00pH reference"
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.calibrate_s_ph_01_2
    from:
    to: Register calibration for pH 7.00
  condition: []
  action:
  - service: input_text.set_value
    metadata: {}
    data:
      value: Registered calibration for pH sensor 2 for pH 7.00 reference.
    target:
      entity_id: input_text.calibration_status
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: false
      topic: "cmd/sph01/2/req"
      payload: '{ "cmd": "calibrate_ph_0700", "res_topic": "dt/gf/sph01/2/res"}'
  mode: single

- alias: "Initiate calibration for pH sensor 2  for 10.01pH reference"
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.calibrate_s_ph_01_2
    from:
    to: Initiate calibration for pH 10.01
  condition: []
  action:
  - service: input_text.set_value
    metadata: {}
    data:
      value: Immerse probe in pH 10.01, register calibration afte a while.
    target:
      entity_id: input_text.calibration_status
  mode: single

- alias: "Register calibration for pH sensor 2  for 10.01pH reference"
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_select.calibrate_s_ph_01_2
    from:
    to: Register calibration for pH 10.01
  condition: []
  action:
  - service: input_text.set_value
    metadata: {}
    data:
      value: Registered calibration for pH sensor 2 for pH 10.01 reference.
    target:
      entity_id: input_text.calibration_status
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: false
      topic: "cmd/sph01/2/req"
      payload: '{ "cmd": "calibrate_ph_1001", "res_topic": "dt/gf/sph01/2/res"}'
  mode: single
#───────────────────────────────────────────────────────────────────────#

#CO2_VOC_1 [Temperature, Humidity & CO2]
#───────────────────────────────────────────────────────────────────────#
#__Sensor 1 Request__#
- alias: "CO2VOC_1 Request" 
  description: ''
  trigger:
  - platform: time_pattern
    seconds: /10
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: false
      topic: "dt/gf/CO2VOC/1/req"
      payload: '{"req_topic": "dt/gf/CO2VOC/1/req", "res_topic": "dt/gf/CO2VOC/1/res",
        "data": "ha_req" }'
  mode: single

#__Sensor 1 Request__#
#- alias: "CO2VOC_2 Request" 
#  description: ''
#  trigger:
#  - platform: time_pattern
#    seconds: /49
#  condition: []
#  action:
#  - service: mqtt.publish
#    metadata: {}
#    data:
#     qos: 0
#      retain: false
#      topic: "dt/gf/CO2VOC/2/req"
#      payload: '{"req_topic": "dt/gf/CO2VOC/2/req", "res_topic": "dt/gf/CO2VOC/2/res",
#        "data": "ha_req" }'
#  mode: single


#STH01_1 [Temperature & Humidity]
#───────────────────────────────────────────────────────────────────────#
#__Sensor 1 Request__#
- alias: "STH01_1 Request" 
  description: ''
  trigger:
  - platform: time_pattern
    seconds: 5
  - platform: time_pattern
    seconds: 11
  - platform: time_pattern
    seconds: 15
  - platform: time_pattern
    seconds: 21
  - platform: time_pattern
    seconds: 25
  - platform: time_pattern
    seconds: 29
  - platform: time_pattern
    seconds: 35
  - platform: time_pattern
    seconds: 41
  - platform: time_pattern
    seconds: 45
  - platform: time_pattern
    seconds: 51
  - platform: time_pattern
    seconds: 55
  - platform: time_pattern
    seconds: 59
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: false
      topic: "dt/gf/STH01/1/req"
      payload: '{"req_topic": "dt/gf/STH01/1/req", "res_topic": "dt/gf/STH01/1/res",
        "data": "ha_req" }'
  mode: single

  #__Sensor 2 Request__#
- alias: "STH01_2 Request" 
  description: ''
  trigger:
  - platform: time_pattern
    seconds: 8
  - platform: time_pattern
    seconds: 38
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: false
      topic: "dt/gf/STH01/2/req"
      payload: '{"req_topic": "dt/gf/STH01/2/req", "res_topic": "dt/gf/STH01/2/res",
        "data": "ha_req" }'
  mode: single
#───────────────────────────────────────────────────────────────────────#


#S-YM-01 [Temperature & Leave wetness]#
#───────────────────────────────────────────────────────────────────────#
#__Request__#
- alias: "S-YM-01 Request"
  description: ''
  trigger:
  - platform: time_pattern
    seconds: 9
  - platform: time_pattern
    seconds: 39
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: false
      topic: "dt/gf/sym01/req"
      payload: '{"req_topic": "dt/gf/sym01/req", "res_topic": "dt/gf/sym01/res",
        "data": "ha_req" }'
  mode: single
#───────────────────────────────────────────────────────────────────────#


#───────────────────────────────────────────────────────────────────────#
# Section: RELAY AUTOMATIONS
# Purpose: Forward input_boolean states to physical actuators over MQTT
#───────────────────────────────────────────────────────────────────────#
#__Relay 1__#
- alias: "Relay 01, Turn on"
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.relay_1
    from: 'off'
    to: 'on'
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: true
      topic: "cmd/relay01/req"
      payload: '{ "cmd": "on"}'
  mode: single

- alias: "Relay 01, Turn off"
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.relay_1
    from: 'on'
    to: 'off'
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: true
      topic: "cmd/relay01/req"
      payload: '{"cmd": "off"}'
  mode: single


#__Relay 2__#
- alias: "Relay 02, Turn on"
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.relay_2
    from: 'off'
    to: 'on'
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: true
      topic: "cmd/relay02/req"
      payload: '{ "cmd": "on"}'
  mode: single

- alias: "Relay 02, Turn off"
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.relay_2
    from: 'on'
    to: 'off'
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: true
      topic: "cmd/relay02/req"
      payload: '{"cmd": "off"}'
  mode: single


#__Relay 3__#
- alias: "Relay 03, Turn on"
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.relay_3
    from: 'off'
    to: 'on'
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: true
      topic: "cmd/relay03/req"
      payload: '{ "cmd": "on"}'
  mode: single

- alias: "Relay 03, Turn off"
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.relay_3
    from: 'on'
    to: 'off'
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: true
      topic: "cmd/relay03/req"
      payload: '{"cmd": "off"}'
  mode: single


#__Relay 4__#
- alias: "Relay 04, Turn on"
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.relay_4
    from: 'off'
    to: 'on'
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: true
      topic: "cmd/relay04/req"
      payload: '{ "cmd": "on"}'
  mode: single

- alias: "Relay 04, Turn off"
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.relay_4
    from: 'on'
    to: 'off'
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: true
      topic: "cmd/relay04/req"
      payload: '{"cmd": "off"}'
  mode: single


#__Relay 5__#
- alias: "Relay 05, Turn on"
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.relay_5
    from: 'off'
    to: 'on'
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: true
      topic: "cmd/relay05/req"
      payload: '{ "cmd": "on"}'
  mode: single

- alias: "Relay 05, Turn off"
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.relay_5
    from: 'on'
    to: 'off'
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: true
      topic: "cmd/relay05/req"
      payload: '{"cmd": "off"}'
  mode: single


#__Relay 6__#
- alias: "Relay 06, Turn on"
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.relay_6
    from: 'off'
    to: 'on'
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: true
      topic: "cmd/relay06/req"
      payload: '{ "cmd": "on"}'
  mode: single

- alias: "Relay 06, Turn off"
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.relay_6
    from: 'on'
    to: 'off'
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: true
      topic: "cmd/relay06/req"
      payload: '{"cmd": "off"}'
  mode: single


#__Relay 7__#
- alias: "Relay 07, Turn on"
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.relay_7
    from: 'off'
    to: 'on'
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: true
      topic: "cmd/relay07/req"
      payload: '{ "cmd": "on"}'
  mode: single

- alias: "Relay 07, Turn off"
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.relay_7
    from: 'on'
    to: 'off'
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: true
      topic: "cmd/relay07/req"
      payload: '{"cmd": "off"}'
  mode: single


#__Relay 8__#
- alias: "Relay 08, Turn on"
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.relay_8
    from: 'off'
    to: 'on'
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: true
      topic: "cmd/relay08/req"
      payload: '{ "cmd": "on"}'
  mode: single

- alias: "Relay 08, Turn off"
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.relay_8
    from: 'on'
    to: 'off'
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: true
      topic: "cmd/relay08/req"
      payload: '{"cmd": "off"}'
  mode: single


#__Relay 9__#
- alias: "Relay 09, Turn on"
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.relay_9
    from: 'off'
    to: 'on'
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: true
      topic: "cmd/relay09/req"
      payload: '{ "cmd": "on"}'
  mode: single

- alias: "Relay 09, Turn off"
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.relay_9
    from: 'on'
    to: 'off'
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: true
      topic: "cmd/relay09/req"
      payload: '{"cmd": "off"}'
  mode: single


#__Relay 10__#
- alias: "Relay 10, Turn on"
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.relay_10
    from: 'off'
    to: 'on'
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: true
      topic: "cmd/relay10/req"
      payload: '{ "cmd": "on"}'
  mode: single

- alias: "Relay 10, Turn off"
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.relay_10
    from: 'on'
    to: 'off'
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: true
      topic: "cmd/relay10/req"
      payload: '{"cmd": "off"}'
  mode: single


#__Relay 11__#
- alias: "Relay 11, Turn on"
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.relay_11
    from: 'off'
    to: 'on'
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: true
      topic: "cmd/relay11/req"
      payload: '{ "cmd": "on"}'
  mode: single

- alias: "Relay 11, Turn off"
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.relay_11
    from: 'on'
    to: 'off'
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: true
      topic: "cmd/relay11/req"
      payload: '{"cmd": "off"}'
  mode: single


#__Relay 12__#
- alias: "Relay 12, Turn on"
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.relay_12
    from: 'off'
    to: 'on'
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: true
      topic: "cmd/relay12/req"
      payload: '{ "cmd": "on"}'
  mode: single

- alias: "Relay 12, Turn off"
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.relay_12
    from: 'on'
    to: 'off'
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: true
      topic: "cmd/relay12/req"
      payload: '{"cmd": "off"}'
  mode: single

#__Relay 13__#
- alias: "Relay 13, Turn on"
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.relay_13
    from: 'off'
    to: 'on'
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: true
      topic: "cmd/relay13/req"
      payload: '{ "cmd": "on"}'
  mode: single

- alias: "Relay 13, Turn off"
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.relay_13
    from: 'on'
    to: 'off'
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: true
      topic: "cmd/relay13/req"
      payload: '{"cmd": "off"}'
  mode: single


#__Relay 14__#
- alias: "Relay 14, Turn on"
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.relay_14
    from: 'off'
    to: 'on'
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: true
      topic: "cmd/relay14/req"
      payload: '{ "cmd": "on"}'
  mode: single

- alias: "Relay 14, Turn off"
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.relay_14
    from: 'on'
    to: 'off'
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: true
      topic: "cmd/relay14/req"
      payload: '{"cmd": "off"}'
  mode: single


#__Relay 15__#
- alias: "Relay 15, Turn on"
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.relay_15
    from: 'off'
    to: 'on'
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: true
      topic: "cmd/relay15/req"
      payload: '{ "cmd": "on"}'
  mode: single

- alias: "Relay 15, Turn off"
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.relay_15
    from: 'on'
    to: 'off'
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: true
      topic: "cmd/relay15/req"
      payload: '{"cmd": "off"}'
  mode: single


#__Relay 16__#
- alias: "Relay 16, Turn on"
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.relay_16
    from: 'off'
    to: 'on'
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: true
      topic: "cmd/relay16/req"
      payload: '{ "cmd": "on"}'
  mode: single

- alias: "Relay 16, Turn off"
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.relay_16
    from: 'on'
    to: 'off'
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: true
      topic: "cmd/relay16/req"
      payload: '{"cmd": "off"}'
  mode: single


#__Solid State Relay__#
- alias: "Solid state relay 01, Turn on"
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.solid_state_relay1
    from: 'off'
    to: 'on'
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: true
      topic: "cmd/solid_state_relay01/req"
      payload: '{"cmd": "on"}'
  mode: single

- alias: "Solid state relay 01, Turn off"
  description: ''
  trigger:
  - platform: state
    entity_id:
    - input_boolean.solid_state_relay1
    from: 'on'
    to: 'off'
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data:
      qos: 0
      retain: true
      topic: "cmd/solid_state_relay01/req"
      payload: '{"cmd": "off"}'
  mode: single

- alias: "Solid state relay 01, Update state"
  description: ''
  trigger:
  - platform: state
    entity_id:
      - input_number.ssr_duty_cycle
      - input_number.ssr_base_period
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data_template:
      qos: 0
      retain: true
      topic: "cmd/solid_state_relay01/req"
      payload: >
        {
          "cmd": "adjust_ssr_pwm",
          "res_topic": "cmd/solid_state_relay01/res",
          "value_duty_cycle": "{{  states('input_number.ssr_duty_cycle') | round(1) }}",
          "value_base_period": "{{  states('input_number.ssr_base_period') | round(0) }}"
        }
      
  mode: single

- alias: "Solid state relay 01, Stop PWM loop"
  description: ''
  trigger:
  - platform: state
    entity_id:
      - input_boolean.solid_state_relay_stop_loop
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data_template:
      qos: 0
      retain: false
      topic: "cmd/solid_state_relay01/req"
      payload: >
        {
          "cmd": "ssr_stop_pwm_loop",
          "res_topic": "cmd/solid_state_relay01/res",
          "value": "{{  states('input_boolean.solid_state_relay_stop_loop') }}"
        }
      
  mode: single

- alias: "Solid state relay 01, Turn on for {{ states('input_number.ssr_turn_on_for') | round(0) }} seconds"
  description: ''
  trigger:
  - platform: state
    entity_id:
      - input_number.ssr_turn_on_for
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data_template:
      qos: 0
      retain: false
      topic: "cmd/solid_state_relay01/req"
      payload: >
        {
          "cmd": "on_for",
          "time": "{{  states('input_number.ssr_turn_on_for') | round(0) }}"
        }
      
  mode: single



#__Fan Voltage__#
- alias: "Fan voltage, Update"
  description: ''
  trigger:
  - platform: state
    entity_id:
      - input_number.new_intake_fan_voltage
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data_template:
      qos: 0
      retain: true
      topic: "cmd/fan_voltage/req"
      payload: >
        {
          "cmd": "adjust",
          "res_topic": "cmd/fan_voltage/res",
          "value": "{{  states('input_number.new_intake_fan_voltage') | round(2) }}"
        }
      
  mode: single


- alias: "Enable normal fan operation"
  description: ''
  trigger:
  - platform: state
    entity_id:
      - input_boolean.fan_normal_operation_toggle
    from: "off"
    to: "on"
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data_template:
      qos: 0
      retain: true
      topic: "cmd/fan_voltage/req"
      payload: >
        {
          "cmd": "adjust",
          "res_topic": "cmd/fan_voltage/res",
          "value": "8"
        }
      
  mode: single

- alias: "Disable normal fan operation"
  description: ''
  trigger:
  - platform: state
    entity_id:
      - input_boolean.fan_normal_operation_toggle
    from: "on"
    to: "off"
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data_template:
      qos: 0
      retain: true
      topic: "cmd/fan_voltage/req"
      payload: >
        {
          "cmd": "adjust",
          "res_topic": "cmd/fan_voltage/res",
          "value": "0"
        }
      
  mode: single


#__Valve Voltage__#
- alias: "Valve voltage, Update"
  description: ''
  trigger:
  - platform: state
    entity_id:
      - input_number.valve_voltage
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data_template:
      qos: 0
      retain: true
      topic: "cmd/valve_voltage/req"
      payload: >
        {
          "cmd": "adjust",
          "res_topic": "cmd/valve_voltage/res",
          "value": "{{  states('input_number.valve_voltage') | round(2) }}"
        }
      
  mode: single


#__Elixia Grow Lamp 1__#
- alias: "Lamp 01, Update LED intensity"
  description: ''
  trigger:
  - platform: state
    entity_id:
      - input_number.elixia_1_channel_450nm
      - input_number.elixia_1_channel_660nm
      - input_number.elixia_1_channel_735nm
      - input_number.elixia_1_channel_5700k
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data_template:
      qos: 0
      retain: false
      topic: "cmd/lamp01/req"
      payload: >
        {
          "cmd": "adjust_intensity",
          "res_topic": "cmd/lamp01/res",
          "intensity": "{{  states('input_number.elixia_1_channel_450nm') | round(0) }}:{{  states('input_number.elixia_1_channel_660nm') | round(0) }}:{{  states('input_number.elixia_1_channel_735nm') | round(0) }}:{{  states('input_number.elixia_1_channel_5700k') | round(0) }}"
        }
      
  mode: single


#__Elixia Grow Lamp 2__#
- alias: "Lamp 02, Update LED intensity"
  description: ''
  trigger:
  - platform: state
    entity_id:
      - input_number.elixia_2_channel_450nm
      - input_number.elixia_2_channel_660nm
      - input_number.elixia_2_channel_735nm
      - input_number.elixia_2_channel_5700k
  condition: []
  action:
  - service: mqtt.publish
    metadata: {}
    data_template:
      qos: 0
      retain: false
      topic: "cmd/lamp02/req"
      payload: >
        {
          "cmd": "adjust_intensity",
          "res_topic": "cmd/lamp02/res",
          "intensity": "{{  states('input_number.elixia_2_channel_450nm') | round(0) }}:{{  states('input_number.elixia_2_channel_660nm') | round(0) }}:{{  states('input_number.elixia_2_channel_735nm') | round(0) }}:{{  states('input_number.elixia_2_channel_5700k') | round(0) }}"
        }
      
  mode: single

#───────────────────────────────────────────────────────────────────────#
# Section: DESIRED VALUES
# Purpose: Desired values for controllers
#───────────────────────────────────────────────────────────────────────#
#__Desired Moisture__#
- alias: "Ref Humid, Update Ref humid"
  description: ''
  trigger:
  - platform: state
    entity_id:
      - input_number.humid_ref
  condition: 
    - condition: state
      entity_id: input_boolean.cooling_pid_enable_toggle
      state: "on"
  action:
  - service: mqtt.publish
    metadata: {}
    data_template:
      qos: 0
      retain: true
      topic: "cmd/refhumid/req"
      payload: >
        {
          "cmd": "adjust_ref_humid",
          "res_topic": "cmd/refhumid/res",
          "value": "{{  states('input_number.humid_ref') | round(1) }}"
        }
      
  mode: single

#__Desired Temperature__#
- alias: "Ref temp, Update Ref temp"
  description: ''
  trigger:
  - platform: state
    entity_id:
      - input_number.temp_ref
  condition: 
    - condition: state
      entity_id: input_boolean.heating_pid_enable_toggle
      state: "on"
  action:
  - service: mqtt.publish
    metadata: {}
    data_template:
      qos: 0
      retain: true
      topic: "cmd/reftemp/req"
      payload: >
        {
          "cmd": "adjust_ref_temp",
          "res_topic": "cmd/reftemp/res",
          "value": "{{  states('input_number.temp_ref') | round(1) }}"
        }
      
  mode: single

#__Desired CO2__#
- alias: "Ref CO2, Update Ref CO2"
  description: ''
  trigger:
  - platform: state
    entity_id:
      - input_number.co2_ref
  condition: 
    - condition: state
      entity_id: input_boolean.co2_pid_enable_toggle
      state: "on"
  action:
  - service: mqtt.publish
    metadata: {}
    data_template:
      qos: 0
      retain: true
      topic: "cmd/refco2/req"
      payload: >
        {
          "cmd": "adjust_ref_co2",
          "res_topic": "cmd/refco2/res",
          "value": "{{  states('input_number.co2_ref') | round(0) }}"
        }
      
  mode: single

#───────────────────────────────────────────────────────────────────────#
# Section: PIDs
# Purpose: PID controllers
#───────────────────────────────────────────────────────────────────────#

- alias: "Cooling PID, enable/disable"
  id: "cooling_pid_automation"
  description: 'Runs the cooling pid every 10 seconds if the toggle is ON'
  trigger:
  - platform: time_pattern
    seconds: /5
  #- platform: time_pattern
    #seconds: 25
  #- platform: time_pattern
    #seconds: 40
  #- platform: time_pattern
    #seconds: 55
  condition: 
    - condition: state
      entity_id: input_boolean.cooling_pid_enable_toggle
      state: "on"

  action:
  - service: mqtt.publish
    metadata: {}
    data_template:
      qos: 0
      retain: true
      topic: "cmd/cooling_pid/req"
      payload: '{"cmd": "pid_enable"}'
      
  mode: single
 

- alias: "Heating PID, enable/disable"
  id: "heating_pid_automation"
  description: 'Runs the heating pid every 10 seconds if toggle is ON'
  trigger:
  - platform: time_pattern
    seconds: /10
  condition: 
    - condition: state
      entity_id: input_boolean.heating_pid_enable_toggle
      state: "on"

  action:
  - service: mqtt.publish
    metadata: {}
    data_template:
      qos: 0
      retain: true
      topic: "cmd/heating_pid/req"
      payload: '{"cmd": "pid_enable"}'
      
  mode: single
  
- alias: "CO2 PID, enable/disable"
  id: "co2_pid_automation"
  description: 'Runs the CO2 pid every 10 seconds if toggle is ON'
  trigger:
  - platform: time_pattern
    seconds: /30
  condition: 
    - condition: state
      entity_id: input_boolean.co2_pid_enable_toggle
      state: "on"

  action:
  - service: mqtt.publish
    metadata: {}
    data_template:
      qos: 0
      retain: true
      topic: "cmd/co2_pid/req"
      payload: '{"cmd": "pid_enable"}'
      
  mode: single
