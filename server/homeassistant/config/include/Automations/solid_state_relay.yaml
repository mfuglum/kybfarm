# ┌────────────────────────────────────────────────────────────────────────────┐
# │                    Solid State Relay - Automation Rules                    │
# │                    KYBFarm - MQTT Controlled SSR Logic                     │
# └────────────────────────────────────────────────────────────────────────────┘

# ──────────────── SSR 01 • Turn ON ────────────────
- alias: "SSR 01 • Turn ON"
  trigger:
    - platform: state
      entity_id: input_boolean.solid_state_relay1
      from: "off"
      to: "on"
  action:
    - service: mqtt.publish
      data:
        qos: 0
        retain: true
        topic: "cmd/solid_state_relay01/req"
        payload: '{"cmd": "on"}'

# ──────────────── SSR 01 • Turn OFF ────────────────
- alias: "SSR 01 • Turn OFF"
  trigger:
    - platform: state
      entity_id: input_boolean.solid_state_relay1
      from: "on"
      to: "off"
  action:
    - service: mqtt.publish
      data:
        qos: 0
        retain: true
        topic: "cmd/solid_state_relay01/req"
        payload: '{"cmd": "off"}'

# ───── SSR 01 • Update PWM with Duty Cycle and Base Period ─────
- alias: "SSR 01 • Update PWM"
  trigger:
    - platform: state
      entity_id:
        - input_number.ssr_duty_cycle
        - input_number.ssr_base_period
  action:
    - service: mqtt.publish
      data_template:
        qos: 0
        retain: true
        topic: "cmd/solid_state_relay01/req"
        payload: >
          {
            "cmd": "adjust_ssr_pwm",
            "res_topic": "cmd/solid_state_relay01/res",
            "value_duty_cycle": "{{ states('input_number.ssr_duty_cycle') | round(1) }}",
            "value_base_period": "{{ states('input_number.ssr_base_period') | round(1) }}"
          }

# ───── SSR 01 • Stop PWM Loop Immediately ─────
- alias: "SSR 01 • Stop PWM Loop"
  trigger:
    - platform: state
      entity_id: input_boolean.solid_state_relay_stop_loop
  action:
    - service: mqtt.publish
      data_template:
        qos: 0
        retain: false
        topic: "cmd/solid_state_relay01/req"
        payload: >
          {
            "cmd": "ssr_stop_pwm_loop",
            "res_topic": "cmd/solid_state_relay01/res",
            "value": "{{ states('input_boolean.solid_state_relay_stop_loop') }}"
          }

# ───── SSR 01 • ON for N Seconds ─────
- alias: "SSR 01 • ON for N Seconds"
  trigger:
    - platform: state
      entity_id: input_number.ssr_turn_on_for
  action:
    - service: mqtt.publish
      data_template:
        qos: 0
        retain: false
        topic: "cmd/solid_state_relay01/req"
        payload: >
          {
            "cmd": "on_for",
            "time": "{{ states('input_number.ssr_turn_on_for') | round(0) }}"
          }
